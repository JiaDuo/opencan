ARM GAS  /tmp/ccSHxpUy.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f0xx_hal.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_MspInit,"ax",%progbits
  20              		.align	2
  21              		.weak	HAL_MspInit
  22              		.code	16
  23              		.thumb_func
  25              	HAL_MspInit:
  26              	.LFB65:
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              		@ sp needed
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE65:
  36 0002 C046     		.section	.text.HAL_MspDeInit,"ax",%progbits
  37              		.align	2
  38              		.weak	HAL_MspDeInit
  39              		.code	16
  40              		.thumb_func
  42              	HAL_MspDeInit:
  43              	.LFB43:
  44              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @file    stm32f0xx_hal.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @verbatim
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The HAL contains two APIs categories:
ARM GAS  /tmp/ccSHxpUy.s 			page 2


  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Initialization and de-initialization functions
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Control functions
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @endverbatim
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @attention
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * All rights reserved.</center></h2>
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * the "License"; You may not use this file except in compliance with the
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #include "stm32f0xx_hal.h"
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @addtogroup STM32F0xx_HAL_Driver
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL HAL
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief HAL module driver.
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private define ------------------------------------------------------------*/
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** 
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief STM32F0xx HAL Driver version number V1.7.3
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB1   (0x07U) /*!< [23:16] sub1 version */
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB2   (0x03U) /*!< [15:8]  sub2 version */
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */ 
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION         ((__STM32F0xx_HAL_VERSION_MAIN << 24U)\
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB1 << 16U)\
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB2 << 8U )\
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_RC))
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define IDCODE_DEVID_MASK    (0x00000FFFU)
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Macros HAL Private Macros
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
ARM GAS  /tmp/ccSHxpUy.s 			page 3


  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Exported variables ---------------------------------------------------------*/
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Exported Variables
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __IO uint32_t uwTick;
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    Initialization and de-initialization functions
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****               ##### Initialization and de-initialization functions #####
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    [..]  This section provides functions allowing to:
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock 
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           configuration. It initializes the systick also when timeout is needed
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           and the backup domain when enabled.
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) de-Initializes common part of the HAL.
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           Tick interrupt priority.
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              handled in milliseconds basis.
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             ISR process will be blocked. 
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****        (++) functions affecting time base configurations are declared as __Weak  
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
ARM GAS  /tmp/ccSHxpUy.s 			page 4


 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This function configures the Flash prefetch,
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Configures time base source, NVIC and Low level hardware
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called at the beginning of program after reset and before 
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       the clock configuration
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note The time base configuration is based on HSI clock when exiting from Reset.
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Once done, time base tick start incrementing.
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       In the default implementation,Systick is used as source of time base.
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The tick variable is incremented each 1ms in its ISR.
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Init the low level hardware */
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspInit();
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function de-Initialize common part of the HAL and stops the SysTick
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        of time base.
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is optional.
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* De-Init the low level hardware */
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspDeInit();
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Initialize the MSP.
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
ARM GAS  /tmp/ccSHxpUy.s 			page 5


 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspInit(void)
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  DeInitializes the MSP.
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspDeInit(void)
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
  45              		.loc 1 200 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
  50              		.loc 1 204 0
  51              		@ sp needed
  52 0000 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE43:
  56 0002 C046     		.section	.text.HAL_DeInit,"ax",%progbits
  57              		.align	2
  58              		.global	HAL_DeInit
  59              		.code	16
  60              		.thumb_func
  62              	HAL_DeInit:
  63              	.LFB41:
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
  64              		.loc 1 166 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  68              		.loc 1 168 0
  69 0000 0121     		movs	r1, #1
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  70              		.loc 1 169 0
  71 0002 0022     		movs	r2, #0
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
  72              		.loc 1 166 0
  73 0004 10B5     		push	{r4, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 4, -8
  77              		.cfi_offset 14, -4
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  78              		.loc 1 168 0
  79 0006 064B     		ldr	r3, .L4
  80 0008 4942     		rsbs	r1, r1, #0
  81 000a 1961     		str	r1, [r3, #16]
ARM GAS  /tmp/ccSHxpUy.s 			page 6


 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  82              		.loc 1 169 0
  83 000c 1A61     		str	r2, [r3, #16]
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  84              		.loc 1 171 0
  85 000e D960     		str	r1, [r3, #12]
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  86              		.loc 1 172 0
  87 0010 DA60     		str	r2, [r3, #12]
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
  88              		.loc 1 174 0
  89 0012 9962     		str	r1, [r3, #40]
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  90              		.loc 1 175 0
  91 0014 9A62     		str	r2, [r3, #40]
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     
  92              		.loc 1 178 0
  93 0016 FFF7FEFF 		bl	HAL_MspDeInit
  94              	.LVL0:
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  95              		.loc 1 182 0
  96              		@ sp needed
  97 001a 0020     		movs	r0, #0
  98 001c 10BD     		pop	{r4, pc}
  99              	.L5:
 100 001e C046     		.align	2
 101              	.L4:
 102 0020 00100240 		.word	1073876992
 103              		.cfi_endproc
 104              	.LFE41:
 106              		.global	__aeabi_uidiv
 107              		.section	.text.HAL_InitTick,"ax",%progbits
 108              		.align	2
 109              		.weak	HAL_InitTick
 110              		.code	16
 111              		.thumb_func
 113              	HAL_InitTick:
 114              	.LFB44:
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function configures the source of the time base. 
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Tick interrupt priority.
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig(). 
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower) 
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The function is declared as __Weak  to be overwritten  in case of other
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementation  in user file.
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
ARM GAS  /tmp/ccSHxpUy.s 			page 7


 115              		.loc 1 223 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              	.LVL1:
 120 0000 10B5     		push	{r4, lr}
 121              	.LCFI1:
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 4, -8
 124              		.cfi_offset 14, -4
 125              		.loc 1 223 0
 126 0002 0400     		movs	r4, r0
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 127              		.loc 1 225 0
 128 0004 FA20     		movs	r0, #250
 129              	.LVL2:
 130 0006 0E4B     		ldr	r3, .L12
 131 0008 8000     		lsls	r0, r0, #2
 132 000a 1978     		ldrb	r1, [r3]
 133 000c FFF7FEFF 		bl	__aeabi_uidiv
 134              	.LVL3:
 135 0010 0C4B     		ldr	r3, .L12+4
 136 0012 0100     		movs	r1, r0
 137 0014 1868     		ldr	r0, [r3]
 138 0016 FFF7FEFF 		bl	__aeabi_uidiv
 139              	.LVL4:
 140 001a FFF7FEFF 		bl	HAL_SYSTICK_Config
 141              	.LVL5:
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     return HAL_ERROR;
 142              		.loc 1 227 0
 143 001e 0123     		movs	r3, #1
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 144              		.loc 1 225 0
 145 0020 0028     		cmp	r0, #0
 146 0022 01D1     		bne	.L7
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure the SysTick IRQ priority */
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 147              		.loc 1 231 0
 148 0024 032C     		cmp	r4, #3
 149 0026 01D9     		bls	.L11
 150              	.L7:
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     uwTickPrio = TickPriority;
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   else
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     return HAL_ERROR;
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    /* Return function status */
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
ARM GAS  /tmp/ccSHxpUy.s 			page 8


 151              		.loc 1 243 0
 152 0028 1800     		movs	r0, r3
 153              		@ sp needed
 154              	.LVL6:
 155 002a 10BD     		pop	{r4, pc}
 156              	.LVL7:
 157              	.L11:
 158              	.LBB4:
 159              	.LBB5:
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     uwTickPrio = TickPriority;
 160              		.loc 1 233 0
 161 002c 0022     		movs	r2, #0
 162 002e 2100     		movs	r1, r4
 163 0030 0138     		subs	r0, r0, #1
 164 0032 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 165              	.LVL8:
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 166              		.loc 1 234 0
 167 0036 044B     		ldr	r3, .L12+8
 168 0038 1C60     		str	r4, [r3]
 169              	.LVL9:
 170 003a 0023     		movs	r3, #0
 171 003c F4E7     		b	.L7
 172              	.L13:
 173 003e C046     		.align	2
 174              	.L12:
 175 0040 00000000 		.word	.LANCHOR0
 176 0044 00000000 		.word	SystemCoreClock
 177 0048 00000000 		.word	.LANCHOR1
 178              	.LBE5:
 179              	.LBE4:
 180              		.cfi_endproc
 181              	.LFE44:
 183              		.section	.text.HAL_Init,"ax",%progbits
 184              		.align	2
 185              		.global	HAL_Init
 186              		.code	16
 187              		.thumb_func
 189              	HAL_Init:
 190              	.LFB40:
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 191              		.loc 1 142 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 195              		.loc 1 145 0
 196 0000 1023     		movs	r3, #16
 197 0002 064A     		ldr	r2, .L15
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 198              		.loc 1 142 0
 199 0004 10B5     		push	{r4, lr}
 200              	.LCFI2:
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 4, -8
 203              		.cfi_offset 14, -4
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
ARM GAS  /tmp/ccSHxpUy.s 			page 9


 204              		.loc 1 145 0
 205 0006 1168     		ldr	r1, [r2]
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 206              		.loc 1 150 0
 207 0008 0020     		movs	r0, #0
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 208              		.loc 1 145 0
 209 000a 0B43     		orrs	r3, r1
 210 000c 1360     		str	r3, [r2]
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 211              		.loc 1 150 0
 212 000e FFF7FEFF 		bl	HAL_InitTick
 213              	.LVL10:
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 214              		.loc 1 157 0
 215              		@ sp needed
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 216              		.loc 1 153 0
 217 0012 FFF7FEFF 		bl	HAL_MspInit
 218              	.LVL11:
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 219              		.loc 1 157 0
 220 0016 0020     		movs	r0, #0
 221 0018 10BD     		pop	{r4, pc}
 222              	.L16:
 223 001a C046     		.align	2
 224              	.L15:
 225 001c 00200240 		.word	1073881088
 226              		.cfi_endproc
 227              	.LFE40:
 229              		.section	.text.HAL_IncTick,"ax",%progbits
 230              		.align	2
 231              		.weak	HAL_IncTick
 232              		.code	16
 233              		.thumb_func
 235              	HAL_IncTick:
 236              	.LFB45:
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    HAL Control functions
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                       ##### HAL Control functions #####
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]  This section provides functions allowing to:
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a tick value in millisecond
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a blocking delay in millisecond
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Suspend the time base source interrupt
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Resume the time base source interrupt
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the HAL API driver version
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device identifier
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device revision identifier
ARM GAS  /tmp/ccSHxpUy.s 			page 10


 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during Sleep mode
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        used as application time base.
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       in SysTick ISR.
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_IncTick(void)
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 237              		.loc 1 282 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uwTick += uwTickFreq;
 242              		.loc 1 283 0
 243 0000 034A     		ldr	r2, .L18
 244 0002 0449     		ldr	r1, .L18+4
 245 0004 1368     		ldr	r3, [r2]
 246 0006 0978     		ldrb	r1, [r1]
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 247              		.loc 1 284 0
 248              		@ sp needed
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uwTick += uwTickFreq;
 249              		.loc 1 283 0
 250 0008 CB18     		adds	r3, r1, r3
 251 000a 1360     		str	r3, [r2]
 252              		.loc 1 284 0
 253 000c 7047     		bx	lr
 254              	.L19:
 255 000e C046     		.align	2
 256              	.L18:
 257 0010 00000000 		.word	uwTick
 258 0014 00000000 		.word	.LANCHOR0
 259              		.cfi_endproc
 260              	.LFE45:
 262              		.section	.text.HAL_GetTick,"ax",%progbits
 263              		.align	2
 264              		.weak	HAL_GetTick
 265              		.code	16
 266              		.thumb_func
 268              	HAL_GetTick:
 269              	.LFB46:
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Provides a tick value in millisecond.
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note   This function is declared as __weak  to be overwritten  in case of other 
ARM GAS  /tmp/ccSHxpUy.s 			page 11


 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick value
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 270              		.loc 1 293 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274              		@ link register save eliminated.
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTick;
 275              		.loc 1 294 0
 276 0000 014B     		ldr	r3, .L21
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 277              		.loc 1 295 0
 278              		@ sp needed
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTick;
 279              		.loc 1 294 0
 280 0002 1868     		ldr	r0, [r3]
 281              		.loc 1 295 0
 282 0004 7047     		bx	lr
 283              	.L22:
 284 0006 C046     		.align	2
 285              	.L21:
 286 0008 00000000 		.word	uwTick
 287              		.cfi_endproc
 288              	.LFE46:
 290              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 291              		.align	2
 292              		.global	HAL_GetTickPrio
 293              		.code	16
 294              		.thumb_func
 296              	HAL_GetTickPrio:
 297              	.LFB47:
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function returns a tick priority.
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick priority
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 298              		.loc 1 302 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTickPrio;
 303              		.loc 1 303 0
 304 0000 014B     		ldr	r3, .L24
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 305              		.loc 1 304 0
 306              		@ sp needed
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTickPrio;
 307              		.loc 1 303 0
 308 0002 1868     		ldr	r0, [r3]
 309              		.loc 1 304 0
 310 0004 7047     		bx	lr
ARM GAS  /tmp/ccSHxpUy.s 			page 12


 311              	.L25:
 312 0006 C046     		.align	2
 313              	.L24:
 314 0008 00000000 		.word	.LANCHOR1
 315              		.cfi_endproc
 316              	.LFE47:
 318              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 319              		.align	2
 320              		.global	HAL_SetTickFreq
 321              		.code	16
 322              		.thumb_func
 324              	HAL_SetTickFreq:
 325              	.LFB48:
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Set new tick Freq.
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval status
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 326              		.loc 1 311 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330              	.LVL12:
 331 0000 70B5     		push	{r4, r5, r6, lr}
 332              	.LCFI3:
 333              		.cfi_def_cfa_offset 16
 334              		.cfi_offset 4, -16
 335              		.cfi_offset 5, -12
 336              		.cfi_offset 6, -8
 337              		.cfi_offset 14, -4
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (uwTickFreq != Freq)
 338              		.loc 1 317 0
 339 0002 074C     		ldr	r4, .L32
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 340              		.loc 1 311 0
 341 0004 0300     		movs	r3, r0
 342              		.loc 1 317 0
 343 0006 2578     		ldrb	r5, [r4]
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 344              		.loc 1 312 0
 345 0008 0020     		movs	r0, #0
 346              	.LVL13:
 347              		.loc 1 317 0
 348 000a 9D42     		cmp	r5, r3
 349 000c 07D0     		beq	.L27
 350              	.LVL14:
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     /* Back up uwTickFreq frequency */
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     prevTickFreq = uwTickFreq;
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
ARM GAS  /tmp/ccSHxpUy.s 			page 13


 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     uwTickFreq = Freq;
 351              		.loc 1 323 0
 352 000e 2370     		strb	r3, [r4]
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     /* Apply the new tick Freq */
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 353              		.loc 1 326 0
 354 0010 044B     		ldr	r3, .L32+4
 355 0012 1868     		ldr	r0, [r3]
 356 0014 FFF7FEFF 		bl	HAL_InitTick
 357              	.LVL15:
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     if (status != HAL_OK)
 358              		.loc 1 328 0
 359 0018 0028     		cmp	r0, #0
 360 001a 00D0     		beq	.L27
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     {
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       /* Restore previous tick frequency */
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       uwTickFreq = prevTickFreq;
 361              		.loc 1 331 0
 362 001c 2570     		strb	r5, [r4]
 363              	.LVL16:
 364              	.L27:
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     }
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return status;
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 365              		.loc 1 336 0
 366              		@ sp needed
 367 001e 70BD     		pop	{r4, r5, r6, pc}
 368              	.L33:
 369              		.align	2
 370              	.L32:
 371 0020 00000000 		.word	.LANCHOR0
 372 0024 00000000 		.word	.LANCHOR1
 373              		.cfi_endproc
 374              	.LFE48:
 376              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 377              		.align	2
 378              		.global	HAL_GetTickFreq
 379              		.code	16
 380              		.thumb_func
 382              	HAL_GetTickFreq:
 383              	.LFB49:
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief return tick frequency.
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick period in Hz
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 384              		.loc 1 343 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccSHxpUy.s 			page 14


 388              		@ link register save eliminated.
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTickFreq;
 389              		.loc 1 344 0
 390 0000 014B     		ldr	r3, .L35
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 391              		.loc 1 345 0
 392              		@ sp needed
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTickFreq;
 393              		.loc 1 344 0
 394 0002 1878     		ldrb	r0, [r3]
 395              		.loc 1 345 0
 396 0004 7047     		bx	lr
 397              	.L36:
 398 0006 C046     		.align	2
 399              	.L35:
 400 0008 00000000 		.word	.LANCHOR0
 401              		.cfi_endproc
 402              	.LFE49:
 404              		.section	.text.HAL_Delay,"ax",%progbits
 405              		.align	2
 406              		.weak	HAL_Delay
 407              		.code	16
 408              		.thumb_func
 410              	HAL_Delay:
 411              	.LFB50:
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function provides accurate delay (in milliseconds) based 
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        on variable incremented.
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is incremented.
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note ThiS function is declared as __weak to be overwritten in case of other
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 412              		.loc 1 359 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              	.LVL17:
 417 0000 70B5     		push	{r4, r5, r6, lr}
 418              	.LCFI4:
 419              		.cfi_def_cfa_offset 16
 420              		.cfi_offset 4, -16
 421              		.cfi_offset 5, -12
 422              		.cfi_offset 6, -8
 423              		.cfi_offset 14, -4
 424              		.loc 1 359 0
 425 0002 0400     		movs	r4, r0
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 426              		.loc 1 360 0
 427 0004 FFF7FEFF 		bl	HAL_GetTick
 428              	.LVL18:
ARM GAS  /tmp/ccSHxpUy.s 			page 15


 429 0008 0500     		movs	r5, r0
 430              	.LVL19:
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t wait = Delay;
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 431              		.loc 1 364 0
 432 000a 631C     		adds	r3, r4, #1
 433 000c 02D0     		beq	.L39
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 434              		.loc 1 366 0
 435 000e 044B     		ldr	r3, .L44
 436 0010 1B78     		ldrb	r3, [r3]
 437 0012 E418     		adds	r4, r4, r3
 438              	.LVL20:
 439              	.L39:
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 440              		.loc 1 369 0 discriminator 1
 441 0014 FFF7FEFF 		bl	HAL_GetTick
 442              	.LVL21:
 443 0018 401B     		subs	r0, r0, r5
 444 001a 8442     		cmp	r4, r0
 445 001c FAD8     		bhi	.L39
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 446              		.loc 1 372 0
 447              		@ sp needed
 448              	.LVL22:
 449              	.LVL23:
 450 001e 70BD     		pop	{r4, r5, r6, pc}
 451              	.L45:
 452              		.align	2
 453              	.L44:
 454 0020 00000000 		.word	.LANCHOR0
 455              		.cfi_endproc
 456              	.LFE50:
 458              		.section	.text.HAL_SuspendTick,"ax",%progbits
 459              		.align	2
 460              		.weak	HAL_SuspendTick
 461              		.code	16
 462              		.thumb_func
 464              	HAL_SuspendTick:
 465              	.LFB51:
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Suspend Tick increment.
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be disabled and so Tick increment 
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is suspended.
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
ARM GAS  /tmp/ccSHxpUy.s 			page 16


 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_SuspendTick(void)
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 466              		.loc 1 386 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Disable SysTick Interrupt */
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 471              		.loc 1 388 0
 472 0000 0221     		movs	r1, #2
 473 0002 024A     		ldr	r2, .L47
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 474              		.loc 1 389 0
 475              		@ sp needed
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 476              		.loc 1 388 0
 477 0004 1368     		ldr	r3, [r2]
 478 0006 8B43     		bics	r3, r1
 479 0008 1360     		str	r3, [r2]
 480              		.loc 1 389 0
 481 000a 7047     		bx	lr
 482              	.L48:
 483              		.align	2
 484              	.L47:
 485 000c 10E000E0 		.word	-536813552
 486              		.cfi_endproc
 487              	.LFE51:
 489              		.section	.text.HAL_ResumeTick,"ax",%progbits
 490              		.align	2
 491              		.weak	HAL_ResumeTick
 492              		.code	16
 493              		.thumb_func
 495              	HAL_ResumeTick:
 496              	.LFB52:
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Resume Tick increment.
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be enabled and so Tick increment 
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is resumed.
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak  to be overwritten  in case of other
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_ResumeTick(void)
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 497              		.loc 1 402 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              		@ link register save eliminated.
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Enable SysTick Interrupt */
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
ARM GAS  /tmp/ccSHxpUy.s 			page 17


 502              		.loc 1 404 0
 503 0000 0223     		movs	r3, #2
 504 0002 024A     		ldr	r2, .L50
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 505              		.loc 1 405 0
 506              		@ sp needed
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 507              		.loc 1 404 0
 508 0004 1168     		ldr	r1, [r2]
 509 0006 0B43     		orrs	r3, r1
 510 0008 1360     		str	r3, [r2]
 511              		.loc 1 405 0
 512 000a 7047     		bx	lr
 513              	.L51:
 514              		.align	2
 515              	.L50:
 516 000c 10E000E0 		.word	-536813552
 517              		.cfi_endproc
 518              	.LFE52:
 520              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 521              		.align	2
 522              		.global	HAL_GetHalVersion
 523              		.code	16
 524              		.thumb_func
 526              	HAL_GetHalVersion:
 527              	.LFB53:
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This method returns the HAL revision
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval version 0xXYZR (8bits for each decimal, R for RC)
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 528              		.loc 1 412 0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 0
 531              		@ frame_needed = 0, uses_anonymous_args = 0
 532              		@ link register save eliminated.
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  return __STM32F0xx_HAL_VERSION;
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 533              		.loc 1 414 0
 534 0000 0048     		ldr	r0, .L53
 535              		@ sp needed
 536 0002 7047     		bx	lr
 537              	.L54:
 538              		.align	2
 539              	.L53:
 540 0004 00030701 		.word	17236736
 541              		.cfi_endproc
 542              	.LFE53:
 544              		.section	.text.HAL_GetREVID,"ax",%progbits
 545              		.align	2
 546              		.global	HAL_GetREVID
 547              		.code	16
 548              		.thumb_func
 550              	HAL_GetREVID:
 551              	.LFB54:
ARM GAS  /tmp/ccSHxpUy.s 			page 18


 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device revision identifier.
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device revision identifier
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetREVID(void)
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 552              		.loc 1 421 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) >> 16U);
 557              		.loc 1 422 0
 558 0000 014B     		ldr	r3, .L56
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 559              		.loc 1 423 0
 560              		@ sp needed
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) >> 16U);
 561              		.loc 1 422 0
 562 0002 1868     		ldr	r0, [r3]
 563 0004 000C     		lsrs	r0, r0, #16
 564              		.loc 1 423 0
 565 0006 7047     		bx	lr
 566              	.L57:
 567              		.align	2
 568              	.L56:
 569 0008 00580140 		.word	1073829888
 570              		.cfi_endproc
 571              	.LFE54:
 573              		.section	.text.HAL_GetDEVID,"ax",%progbits
 574              		.align	2
 575              		.global	HAL_GetDEVID
 576              		.code	16
 577              		.thumb_func
 579              	HAL_GetDEVID:
 580              	.LFB55:
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device identifier.
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetDEVID(void)
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 581              		.loc 1 430 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 586              		.loc 1 431 0
 587 0000 024B     		ldr	r3, .L59
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 588              		.loc 1 432 0
 589              		@ sp needed
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 590              		.loc 1 431 0
ARM GAS  /tmp/ccSHxpUy.s 			page 19


 591 0002 1868     		ldr	r0, [r3]
 592 0004 0005     		lsls	r0, r0, #20
 593 0006 000D     		lsrs	r0, r0, #20
 594              		.loc 1 432 0
 595 0008 7047     		bx	lr
 596              	.L60:
 597 000a C046     		.align	2
 598              	.L59:
 599 000c 00580140 		.word	1073829888
 600              		.cfi_endproc
 601              	.LFE55:
 603              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 604              		.align	2
 605              		.global	HAL_GetUIDw0
 606              		.code	16
 607              		.thumb_func
 609              	HAL_GetUIDw0:
 610              	.LFB56:
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 611              		.loc 1 439 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 616              		.loc 1 440 0
 617 0000 014B     		ldr	r3, .L62
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 618              		.loc 1 441 0
 619              		@ sp needed
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 620              		.loc 1 440 0
 621 0002 1868     		ldr	r0, [r3]
 622              		.loc 1 441 0
 623 0004 7047     		bx	lr
 624              	.L63:
 625 0006 C046     		.align	2
 626              	.L62:
 627 0008 ACF7FF1F 		.word	536868780
 628              		.cfi_endproc
 629              	.LFE56:
 631              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 632              		.align	2
 633              		.global	HAL_GetUIDw1
 634              		.code	16
 635              		.thumb_func
 637              	HAL_GetUIDw1:
 638              	.LFB57:
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
ARM GAS  /tmp/ccSHxpUy.s 			page 20


 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 639              		.loc 1 448 0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 0
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643              		@ link register save eliminated.
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 644              		.loc 1 449 0
 645 0000 014B     		ldr	r3, .L65
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 646              		.loc 1 450 0
 647              		@ sp needed
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 648              		.loc 1 449 0
 649 0002 1868     		ldr	r0, [r3]
 650              		.loc 1 450 0
 651 0004 7047     		bx	lr
 652              	.L66:
 653 0006 C046     		.align	2
 654              	.L65:
 655 0008 B0F7FF1F 		.word	536868784
 656              		.cfi_endproc
 657              	.LFE57:
 659              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 660              		.align	2
 661              		.global	HAL_GetUIDw2
 662              		.code	16
 663              		.thumb_func
 665              	HAL_GetUIDw2:
 666              	.LFB58:
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 667              		.loc 1 457 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 0
 670              		@ frame_needed = 0, uses_anonymous_args = 0
 671              		@ link register save eliminated.
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 672              		.loc 1 458 0
 673 0000 014B     		ldr	r3, .L68
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 674              		.loc 1 459 0
 675              		@ sp needed
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 676              		.loc 1 458 0
 677 0002 1868     		ldr	r0, [r3]
 678              		.loc 1 459 0
 679 0004 7047     		bx	lr
 680              	.L69:
ARM GAS  /tmp/ccSHxpUy.s 			page 21


 681 0006 C046     		.align	2
 682              	.L68:
 683 0008 B4F7FF1F 		.word	536868788
 684              		.cfi_endproc
 685              	.LFE58:
 687              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 688              		.align	2
 689              		.global	HAL_DBGMCU_EnableDBGStopMode
 690              		.code	16
 691              		.thumb_func
 693              	HAL_DBGMCU_EnableDBGStopMode:
 694              	.LFB59:
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 695              		.loc 1 466 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699              		@ link register save eliminated.
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 700              		.loc 1 467 0
 701 0000 0223     		movs	r3, #2
 702 0002 024A     		ldr	r2, .L71
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 703              		.loc 1 468 0
 704              		@ sp needed
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 705              		.loc 1 467 0
 706 0004 5168     		ldr	r1, [r2, #4]
 707 0006 0B43     		orrs	r3, r1
 708 0008 5360     		str	r3, [r2, #4]
 709              		.loc 1 468 0
 710 000a 7047     		bx	lr
 711              	.L72:
 712              		.align	2
 713              	.L71:
 714 000c 00580140 		.word	1073829888
 715              		.cfi_endproc
 716              	.LFE59:
 718              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 719              		.align	2
 720              		.global	HAL_DBGMCU_DisableDBGStopMode
 721              		.code	16
 722              		.thumb_func
 724              	HAL_DBGMCU_DisableDBGStopMode:
 725              	.LFB60:
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
ARM GAS  /tmp/ccSHxpUy.s 			page 22


 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 726              		.loc 1 475 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 0
 729              		@ frame_needed = 0, uses_anonymous_args = 0
 730              		@ link register save eliminated.
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 731              		.loc 1 476 0
 732 0000 0221     		movs	r1, #2
 733 0002 024A     		ldr	r2, .L74
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 734              		.loc 1 477 0
 735              		@ sp needed
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 736              		.loc 1 476 0
 737 0004 5368     		ldr	r3, [r2, #4]
 738 0006 8B43     		bics	r3, r1
 739 0008 5360     		str	r3, [r2, #4]
 740              		.loc 1 477 0
 741 000a 7047     		bx	lr
 742              	.L75:
 743              		.align	2
 744              	.L74:
 745 000c 00580140 		.word	1073829888
 746              		.cfi_endproc
 747              	.LFE60:
 749              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 750              		.align	2
 751              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 752              		.code	16
 753              		.thumb_func
 755              	HAL_DBGMCU_EnableDBGStandbyMode:
 756              	.LFB61:
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 757              		.loc 1 484 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              		@ link register save eliminated.
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 762              		.loc 1 485 0
 763 0000 0423     		movs	r3, #4
 764 0002 024A     		ldr	r2, .L77
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 765              		.loc 1 486 0
 766              		@ sp needed
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 767              		.loc 1 485 0
 768 0004 5168     		ldr	r1, [r2, #4]
 769 0006 0B43     		orrs	r3, r1
 770 0008 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/ccSHxpUy.s 			page 23


 771              		.loc 1 486 0
 772 000a 7047     		bx	lr
 773              	.L78:
 774              		.align	2
 775              	.L77:
 776 000c 00580140 		.word	1073829888
 777              		.cfi_endproc
 778              	.LFE61:
 780              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 781              		.align	2
 782              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 783              		.code	16
 784              		.thumb_func
 786              	HAL_DBGMCU_DisableDBGStandbyMode:
 787              	.LFB62:
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 788              		.loc 1 493 0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 0
 791              		@ frame_needed = 0, uses_anonymous_args = 0
 792              		@ link register save eliminated.
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 793              		.loc 1 494 0
 794 0000 0421     		movs	r1, #4
 795 0002 024A     		ldr	r2, .L80
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 796              		.loc 1 495 0
 797              		@ sp needed
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 798              		.loc 1 494 0
 799 0004 5368     		ldr	r3, [r2, #4]
 800 0006 8B43     		bics	r3, r1
 801 0008 5360     		str	r3, [r2, #4]
 802              		.loc 1 495 0
 803 000a 7047     		bx	lr
 804              	.L81:
 805              		.align	2
 806              	.L80:
 807 000c 00580140 		.word	1073829888
 808              		.cfi_endproc
 809              	.LFE62:
 811              		.global	uwTickFreq
 812              		.global	uwTickPrio
 813              		.comm	uwTick,4,4
 814              		.section	.data.uwTickPrio,"aw",%progbits
 815              		.align	2
 816              		.set	.LANCHOR1,. + 0
 819              	uwTickPrio:
 820 0000 04000000 		.word	4
 821              		.section	.data.uwTickFreq,"aw",%progbits
 822              		.set	.LANCHOR0,. + 0
ARM GAS  /tmp/ccSHxpUy.s 			page 24


 825              	uwTickFreq:
 826 0000 01       		.byte	1
 827              		.text
 828              	.Letext0:
 829              		.file 2 "/opt/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 830              		.file 3 "/opt/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 831              		.file 4 "Drivers/CMSIS/Include/core_cm0.h"
 832              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 833              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 834              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 835              		.file 8 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 836              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /tmp/ccSHxpUy.s 			page 25


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal.c
     /tmp/ccSHxpUy.s:20     .text.HAL_MspInit:00000000 $t
     /tmp/ccSHxpUy.s:25     .text.HAL_MspInit:00000000 HAL_MspInit
     /tmp/ccSHxpUy.s:37     .text.HAL_MspDeInit:00000000 $t
     /tmp/ccSHxpUy.s:42     .text.HAL_MspDeInit:00000000 HAL_MspDeInit
     /tmp/ccSHxpUy.s:57     .text.HAL_DeInit:00000000 $t
     /tmp/ccSHxpUy.s:62     .text.HAL_DeInit:00000000 HAL_DeInit
     /tmp/ccSHxpUy.s:102    .text.HAL_DeInit:00000020 $d
     /tmp/ccSHxpUy.s:108    .text.HAL_InitTick:00000000 $t
     /tmp/ccSHxpUy.s:113    .text.HAL_InitTick:00000000 HAL_InitTick
     /tmp/ccSHxpUy.s:175    .text.HAL_InitTick:00000040 $d
     /tmp/ccSHxpUy.s:184    .text.HAL_Init:00000000 $t
     /tmp/ccSHxpUy.s:189    .text.HAL_Init:00000000 HAL_Init
     /tmp/ccSHxpUy.s:225    .text.HAL_Init:0000001c $d
     /tmp/ccSHxpUy.s:230    .text.HAL_IncTick:00000000 $t
     /tmp/ccSHxpUy.s:235    .text.HAL_IncTick:00000000 HAL_IncTick
     /tmp/ccSHxpUy.s:257    .text.HAL_IncTick:00000010 $d
                            *COM*:00000004 uwTick
     /tmp/ccSHxpUy.s:263    .text.HAL_GetTick:00000000 $t
     /tmp/ccSHxpUy.s:268    .text.HAL_GetTick:00000000 HAL_GetTick
     /tmp/ccSHxpUy.s:286    .text.HAL_GetTick:00000008 $d
     /tmp/ccSHxpUy.s:291    .text.HAL_GetTickPrio:00000000 $t
     /tmp/ccSHxpUy.s:296    .text.HAL_GetTickPrio:00000000 HAL_GetTickPrio
     /tmp/ccSHxpUy.s:314    .text.HAL_GetTickPrio:00000008 $d
     /tmp/ccSHxpUy.s:319    .text.HAL_SetTickFreq:00000000 $t
     /tmp/ccSHxpUy.s:324    .text.HAL_SetTickFreq:00000000 HAL_SetTickFreq
     /tmp/ccSHxpUy.s:371    .text.HAL_SetTickFreq:00000020 $d
     /tmp/ccSHxpUy.s:377    .text.HAL_GetTickFreq:00000000 $t
     /tmp/ccSHxpUy.s:382    .text.HAL_GetTickFreq:00000000 HAL_GetTickFreq
     /tmp/ccSHxpUy.s:400    .text.HAL_GetTickFreq:00000008 $d
     /tmp/ccSHxpUy.s:405    .text.HAL_Delay:00000000 $t
     /tmp/ccSHxpUy.s:410    .text.HAL_Delay:00000000 HAL_Delay
     /tmp/ccSHxpUy.s:454    .text.HAL_Delay:00000020 $d
     /tmp/ccSHxpUy.s:459    .text.HAL_SuspendTick:00000000 $t
     /tmp/ccSHxpUy.s:464    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
     /tmp/ccSHxpUy.s:485    .text.HAL_SuspendTick:0000000c $d
     /tmp/ccSHxpUy.s:490    .text.HAL_ResumeTick:00000000 $t
     /tmp/ccSHxpUy.s:495    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
     /tmp/ccSHxpUy.s:516    .text.HAL_ResumeTick:0000000c $d
     /tmp/ccSHxpUy.s:521    .text.HAL_GetHalVersion:00000000 $t
     /tmp/ccSHxpUy.s:526    .text.HAL_GetHalVersion:00000000 HAL_GetHalVersion
     /tmp/ccSHxpUy.s:540    .text.HAL_GetHalVersion:00000004 $d
     /tmp/ccSHxpUy.s:545    .text.HAL_GetREVID:00000000 $t
     /tmp/ccSHxpUy.s:550    .text.HAL_GetREVID:00000000 HAL_GetREVID
     /tmp/ccSHxpUy.s:569    .text.HAL_GetREVID:00000008 $d
     /tmp/ccSHxpUy.s:574    .text.HAL_GetDEVID:00000000 $t
     /tmp/ccSHxpUy.s:579    .text.HAL_GetDEVID:00000000 HAL_GetDEVID
     /tmp/ccSHxpUy.s:599    .text.HAL_GetDEVID:0000000c $d
     /tmp/ccSHxpUy.s:604    .text.HAL_GetUIDw0:00000000 $t
     /tmp/ccSHxpUy.s:609    .text.HAL_GetUIDw0:00000000 HAL_GetUIDw0
     /tmp/ccSHxpUy.s:627    .text.HAL_GetUIDw0:00000008 $d
     /tmp/ccSHxpUy.s:632    .text.HAL_GetUIDw1:00000000 $t
     /tmp/ccSHxpUy.s:637    .text.HAL_GetUIDw1:00000000 HAL_GetUIDw1
     /tmp/ccSHxpUy.s:655    .text.HAL_GetUIDw1:00000008 $d
     /tmp/ccSHxpUy.s:660    .text.HAL_GetUIDw2:00000000 $t
     /tmp/ccSHxpUy.s:665    .text.HAL_GetUIDw2:00000000 HAL_GetUIDw2
ARM GAS  /tmp/ccSHxpUy.s 			page 26


     /tmp/ccSHxpUy.s:683    .text.HAL_GetUIDw2:00000008 $d
     /tmp/ccSHxpUy.s:688    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 $t
     /tmp/ccSHxpUy.s:693    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccSHxpUy.s:714    .text.HAL_DBGMCU_EnableDBGStopMode:0000000c $d
     /tmp/ccSHxpUy.s:719    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 $t
     /tmp/ccSHxpUy.s:724    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccSHxpUy.s:745    .text.HAL_DBGMCU_DisableDBGStopMode:0000000c $d
     /tmp/ccSHxpUy.s:750    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 $t
     /tmp/ccSHxpUy.s:755    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccSHxpUy.s:776    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000c $d
     /tmp/ccSHxpUy.s:781    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 $t
     /tmp/ccSHxpUy.s:786    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccSHxpUy.s:807    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000c $d
     /tmp/ccSHxpUy.s:825    .data.uwTickFreq:00000000 uwTickFreq
     /tmp/ccSHxpUy.s:819    .data.uwTickPrio:00000000 uwTickPrio
     /tmp/ccSHxpUy.s:815    .data.uwTickPrio:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
