ARM GAS  /tmp/ccZpg1wz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"usbd_desc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBD_FS_DeviceDescriptor,"ax",%progbits
  20              		.align	2
  21              		.global	USBD_FS_DeviceDescriptor
  22              		.code	16
  23              		.thumb_func
  25              	USBD_FS_DeviceDescriptor:
  26              	.LFB41:
  27              		.file 1 "Src/usbd_desc.c"
   1:Src/usbd_desc.c **** /* USER CODE BEGIN Header */
   2:Src/usbd_desc.c **** /**
   3:Src/usbd_desc.c ****   ******************************************************************************
   4:Src/usbd_desc.c ****   * @file           : usbd_desc.c
   5:Src/usbd_desc.c ****   * @version        : v2.0_Cube
   6:Src/usbd_desc.c ****   * @brief          : This file implements the USB device descriptors.
   7:Src/usbd_desc.c ****   ******************************************************************************
   8:Src/usbd_desc.c ****   * @attention
   9:Src/usbd_desc.c ****   *
  10:Src/usbd_desc.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  11:Src/usbd_desc.c ****   * All rights reserved.</center></h2>
  12:Src/usbd_desc.c ****   *
  13:Src/usbd_desc.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:Src/usbd_desc.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:Src/usbd_desc.c ****   * the License. You may obtain a copy of the License at:
  16:Src/usbd_desc.c ****   *                             www.st.com/SLA0044
  17:Src/usbd_desc.c ****   *
  18:Src/usbd_desc.c ****   ******************************************************************************
  19:Src/usbd_desc.c ****   */
  20:Src/usbd_desc.c **** /* USER CODE END Header */
  21:Src/usbd_desc.c **** 
  22:Src/usbd_desc.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/usbd_desc.c **** #include "usbd_core.h"
  24:Src/usbd_desc.c **** #include "usbd_desc.h"
  25:Src/usbd_desc.c **** #include "usbd_conf.h"
  26:Src/usbd_desc.c **** 
  27:Src/usbd_desc.c **** /* USER CODE BEGIN INCLUDE */
  28:Src/usbd_desc.c **** 
  29:Src/usbd_desc.c **** /* USER CODE END INCLUDE */
  30:Src/usbd_desc.c **** 
  31:Src/usbd_desc.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/ccZpg1wz.s 			page 2


  32:Src/usbd_desc.c **** /* Private define ------------------------------------------------------------*/
  33:Src/usbd_desc.c **** /* Private macro -------------------------------------------------------------*/
  34:Src/usbd_desc.c **** 
  35:Src/usbd_desc.c **** /* USER CODE BEGIN PV */
  36:Src/usbd_desc.c **** /* Private variables ---------------------------------------------------------*/
  37:Src/usbd_desc.c **** 
  38:Src/usbd_desc.c **** /* USER CODE END PV */
  39:Src/usbd_desc.c **** 
  40:Src/usbd_desc.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  41:Src/usbd_desc.c ****   * @{
  42:Src/usbd_desc.c ****   */
  43:Src/usbd_desc.c **** 
  44:Src/usbd_desc.c **** /** @addtogroup USBD_DESC
  45:Src/usbd_desc.c ****   * @{
  46:Src/usbd_desc.c ****   */
  47:Src/usbd_desc.c **** 
  48:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_TypesDefinitions USBD_DESC_Private_TypesDefinitions
  49:Src/usbd_desc.c ****   * @brief Private types.
  50:Src/usbd_desc.c ****   * @{
  51:Src/usbd_desc.c ****   */
  52:Src/usbd_desc.c **** 
  53:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  54:Src/usbd_desc.c **** 
  55:Src/usbd_desc.c **** /* USER CODE END PRIVATE_TYPES */
  56:Src/usbd_desc.c **** 
  57:Src/usbd_desc.c **** /**
  58:Src/usbd_desc.c ****   * @}
  59:Src/usbd_desc.c ****   */
  60:Src/usbd_desc.c **** 
  61:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Defines USBD_DESC_Private_Defines
  62:Src/usbd_desc.c ****   * @brief Private defines.
  63:Src/usbd_desc.c ****   * @{
  64:Src/usbd_desc.c ****   */
  65:Src/usbd_desc.c **** 
  66:Src/usbd_desc.c **** #define USBD_VID     1155
  67:Src/usbd_desc.c **** #define USBD_LANGID_STRING     1033
  68:Src/usbd_desc.c **** #define USBD_MANUFACTURER_STRING     "STMicroelectronics"
  69:Src/usbd_desc.c **** #define USBD_PID_FS     22336
  70:Src/usbd_desc.c **** #define USBD_PRODUCT_STRING_FS     "STM32 Virtual ComPort"
  71:Src/usbd_desc.c **** #define USBD_CONFIGURATION_STRING_FS     "CDC Config"
  72:Src/usbd_desc.c **** #define USBD_INTERFACE_STRING_FS     "CDC Interface"
  73:Src/usbd_desc.c **** 
  74:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
  75:Src/usbd_desc.c **** 
  76:Src/usbd_desc.c **** /* USER CODE END PRIVATE_DEFINES */
  77:Src/usbd_desc.c **** 
  78:Src/usbd_desc.c **** /**
  79:Src/usbd_desc.c ****   * @}
  80:Src/usbd_desc.c ****   */
  81:Src/usbd_desc.c **** 
  82:Src/usbd_desc.c **** /* USER CODE BEGIN 0 */
  83:Src/usbd_desc.c **** 
  84:Src/usbd_desc.c **** /* USER CODE END 0 */
  85:Src/usbd_desc.c **** 
  86:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Macros USBD_DESC_Private_Macros
  87:Src/usbd_desc.c ****   * @brief Private macros.
  88:Src/usbd_desc.c ****   * @{
ARM GAS  /tmp/ccZpg1wz.s 			page 3


  89:Src/usbd_desc.c ****   */
  90:Src/usbd_desc.c **** 
  91:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_MACRO */
  92:Src/usbd_desc.c **** 
  93:Src/usbd_desc.c **** /* USER CODE END PRIVATE_MACRO */
  94:Src/usbd_desc.c **** 
  95:Src/usbd_desc.c **** /**
  96:Src/usbd_desc.c ****   * @}
  97:Src/usbd_desc.c ****   */
  98:Src/usbd_desc.c ****   
  99:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes USBD_DESC_Private_FunctionPrototypes
 100:Src/usbd_desc.c ****   * @brief Private functions declaration.
 101:Src/usbd_desc.c ****   * @{
 102:Src/usbd_desc.c ****   */
 103:Src/usbd_desc.c ****   
 104:Src/usbd_desc.c **** static void Get_SerialNum(void);
 105:Src/usbd_desc.c **** static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len);
 106:Src/usbd_desc.c ****   
 107:Src/usbd_desc.c **** /**
 108:Src/usbd_desc.c ****   * @}
 109:Src/usbd_desc.c ****   */  
 110:Src/usbd_desc.c ****   
 111:Src/usbd_desc.c **** 
 112:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes USBD_DESC_Private_FunctionPrototypes
 113:Src/usbd_desc.c ****   * @brief Private functions declaration for FS.
 114:Src/usbd_desc.c ****   * @{
 115:Src/usbd_desc.c ****   */
 116:Src/usbd_desc.c **** 
 117:Src/usbd_desc.c **** uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 118:Src/usbd_desc.c **** uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 119:Src/usbd_desc.c **** uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 120:Src/usbd_desc.c **** uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 121:Src/usbd_desc.c **** uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 122:Src/usbd_desc.c **** uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 123:Src/usbd_desc.c **** uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 124:Src/usbd_desc.c **** 
 125:Src/usbd_desc.c **** /**
 126:Src/usbd_desc.c ****   * @}
 127:Src/usbd_desc.c ****   */
 128:Src/usbd_desc.c **** 
 129:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 130:Src/usbd_desc.c ****   * @brief Private variables.
 131:Src/usbd_desc.c ****   * @{
 132:Src/usbd_desc.c ****   */
 133:Src/usbd_desc.c **** 
 134:Src/usbd_desc.c **** USBD_DescriptorsTypeDef FS_Desc =
 135:Src/usbd_desc.c **** {
 136:Src/usbd_desc.c ****   USBD_FS_DeviceDescriptor
 137:Src/usbd_desc.c **** , USBD_FS_LangIDStrDescriptor
 138:Src/usbd_desc.c **** , USBD_FS_ManufacturerStrDescriptor
 139:Src/usbd_desc.c **** , USBD_FS_ProductStrDescriptor
 140:Src/usbd_desc.c **** , USBD_FS_SerialStrDescriptor
 141:Src/usbd_desc.c **** , USBD_FS_ConfigStrDescriptor
 142:Src/usbd_desc.c **** , USBD_FS_InterfaceStrDescriptor
 143:Src/usbd_desc.c **** };
 144:Src/usbd_desc.c **** 
 145:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
ARM GAS  /tmp/ccZpg1wz.s 			page 4


 146:Src/usbd_desc.c ****   #pragma data_alignment=4
 147:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 148:Src/usbd_desc.c **** /** USB standard device descriptor. */
 149:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_FS_DeviceDesc[USB_LEN_DEV_DESC] __ALIGN_END =
 150:Src/usbd_desc.c **** {
 151:Src/usbd_desc.c ****   0x12,                       /*bLength */
 152:Src/usbd_desc.c ****   USB_DESC_TYPE_DEVICE,       /*bDescriptorType*/
 153:Src/usbd_desc.c ****   0x00,                       /*bcdUSB */
 154:Src/usbd_desc.c ****   0x02,
 155:Src/usbd_desc.c ****   0x02,                       /*bDeviceClass*/
 156:Src/usbd_desc.c ****   0x02,                       /*bDeviceSubClass*/
 157:Src/usbd_desc.c ****   0x00,                       /*bDeviceProtocol*/
 158:Src/usbd_desc.c ****   USB_MAX_EP0_SIZE,           /*bMaxPacketSize*/
 159:Src/usbd_desc.c ****   LOBYTE(USBD_VID),           /*idVendor*/
 160:Src/usbd_desc.c ****   HIBYTE(USBD_VID),           /*idVendor*/
 161:Src/usbd_desc.c ****   LOBYTE(USBD_PID_FS),        /*idProduct*/
 162:Src/usbd_desc.c ****   HIBYTE(USBD_PID_FS),        /*idProduct*/
 163:Src/usbd_desc.c ****   0x00,                       /*bcdDevice rel. 2.00*/
 164:Src/usbd_desc.c ****   0x02,
 165:Src/usbd_desc.c ****   USBD_IDX_MFC_STR,           /*Index of manufacturer  string*/
 166:Src/usbd_desc.c ****   USBD_IDX_PRODUCT_STR,       /*Index of product string*/
 167:Src/usbd_desc.c ****   USBD_IDX_SERIAL_STR,        /*Index of serial number string*/
 168:Src/usbd_desc.c ****   USBD_MAX_NUM_CONFIGURATION  /*bNumConfigurations*/
 169:Src/usbd_desc.c **** };
 170:Src/usbd_desc.c **** 
 171:Src/usbd_desc.c **** /* USB_DeviceDescriptor */
 172:Src/usbd_desc.c **** 
 173:Src/usbd_desc.c **** /**
 174:Src/usbd_desc.c ****   * @}
 175:Src/usbd_desc.c ****   */
 176:Src/usbd_desc.c **** 
 177:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 178:Src/usbd_desc.c ****   * @brief Private variables.
 179:Src/usbd_desc.c ****   * @{
 180:Src/usbd_desc.c ****   */
 181:Src/usbd_desc.c **** 
 182:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 183:Src/usbd_desc.c ****   #pragma data_alignment=4
 184:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 185:Src/usbd_desc.c **** 
 186:Src/usbd_desc.c **** /** USB lang indentifier descriptor. */
 187:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_LangIDDesc[USB_LEN_LANGID_STR_DESC] __ALIGN_END =
 188:Src/usbd_desc.c **** {
 189:Src/usbd_desc.c ****      USB_LEN_LANGID_STR_DESC,
 190:Src/usbd_desc.c ****      USB_DESC_TYPE_STRING,
 191:Src/usbd_desc.c ****      LOBYTE(USBD_LANGID_STRING),
 192:Src/usbd_desc.c ****      HIBYTE(USBD_LANGID_STRING)
 193:Src/usbd_desc.c **** };
 194:Src/usbd_desc.c **** 
 195:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 196:Src/usbd_desc.c ****   #pragma data_alignment=4
 197:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 198:Src/usbd_desc.c **** /* Internal string descriptor. */
 199:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StrDesc[USBD_MAX_STR_DESC_SIZ] __ALIGN_END;
 200:Src/usbd_desc.c **** 
 201:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 202:Src/usbd_desc.c ****   #pragma data_alignment=4   
ARM GAS  /tmp/ccZpg1wz.s 			page 5


 203:Src/usbd_desc.c **** #endif
 204:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StringSerial[USB_SIZ_STRING_SERIAL] __ALIGN_END = {
 205:Src/usbd_desc.c ****   USB_SIZ_STRING_SERIAL,
 206:Src/usbd_desc.c ****   USB_DESC_TYPE_STRING,
 207:Src/usbd_desc.c **** };
 208:Src/usbd_desc.c **** 
 209:Src/usbd_desc.c **** /**
 210:Src/usbd_desc.c ****   * @}
 211:Src/usbd_desc.c ****   */
 212:Src/usbd_desc.c **** 
 213:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Functions USBD_DESC_Private_Functions
 214:Src/usbd_desc.c ****   * @brief Private functions.
 215:Src/usbd_desc.c ****   * @{
 216:Src/usbd_desc.c ****   */
 217:Src/usbd_desc.c **** 
 218:Src/usbd_desc.c **** /**
 219:Src/usbd_desc.c ****   * @brief  Return the device descriptor
 220:Src/usbd_desc.c ****   * @param  speed : Current device speed
 221:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 222:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 223:Src/usbd_desc.c ****   */
 224:Src/usbd_desc.c **** uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 225:Src/usbd_desc.c **** {
  28              		.loc 1 225 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 226:Src/usbd_desc.c ****   UNUSED(speed);
 227:Src/usbd_desc.c ****   *length = sizeof(USBD_FS_DeviceDesc);
  34              		.loc 1 227 0
  35 0000 1223     		movs	r3, #18
 228:Src/usbd_desc.c ****   return USBD_FS_DeviceDesc;
 229:Src/usbd_desc.c **** }
  36              		.loc 1 229 0
  37 0002 0148     		ldr	r0, .L2
  38              	.LVL1:
 227:Src/usbd_desc.c ****   return USBD_FS_DeviceDesc;
  39              		.loc 1 227 0
  40 0004 0B80     		strh	r3, [r1]
  41              		.loc 1 229 0
  42              		@ sp needed
  43 0006 7047     		bx	lr
  44              	.L3:
  45              		.align	2
  46              	.L2:
  47 0008 00000000 		.word	.LANCHOR0
  48              		.cfi_endproc
  49              	.LFE41:
  51              		.section	.text.USBD_FS_LangIDStrDescriptor,"ax",%progbits
  52              		.align	2
  53              		.global	USBD_FS_LangIDStrDescriptor
  54              		.code	16
  55              		.thumb_func
  57              	USBD_FS_LangIDStrDescriptor:
  58              	.LFB42:
ARM GAS  /tmp/ccZpg1wz.s 			page 6


 230:Src/usbd_desc.c **** 
 231:Src/usbd_desc.c **** /**
 232:Src/usbd_desc.c ****   * @brief  Return the LangID string descriptor
 233:Src/usbd_desc.c ****   * @param  speed : Current device speed
 234:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 235:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 236:Src/usbd_desc.c ****   */
 237:Src/usbd_desc.c **** uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 238:Src/usbd_desc.c **** {
  59              		.loc 1 238 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  64              	.LVL2:
 239:Src/usbd_desc.c ****   UNUSED(speed);
 240:Src/usbd_desc.c ****   *length = sizeof(USBD_LangIDDesc);
  65              		.loc 1 240 0
  66 0000 0423     		movs	r3, #4
 241:Src/usbd_desc.c ****   return USBD_LangIDDesc;
 242:Src/usbd_desc.c **** }
  67              		.loc 1 242 0
  68 0002 0148     		ldr	r0, .L5
  69              	.LVL3:
 240:Src/usbd_desc.c ****   return USBD_LangIDDesc;
  70              		.loc 1 240 0
  71 0004 0B80     		strh	r3, [r1]
  72              		.loc 1 242 0
  73              		@ sp needed
  74 0006 7047     		bx	lr
  75              	.L6:
  76              		.align	2
  77              	.L5:
  78 0008 00000000 		.word	.LANCHOR1
  79              		.cfi_endproc
  80              	.LFE42:
  82              		.section	.text.IntToUnicode,"ax",%progbits
  83              		.align	2
  84              		.code	16
  85              		.thumb_func
  87              	IntToUnicode:
  88              	.LFB49:
 243:Src/usbd_desc.c **** 
 244:Src/usbd_desc.c **** /**
 245:Src/usbd_desc.c ****   * @brief  Return the product string descriptor
 246:Src/usbd_desc.c ****   * @param  speed : Current device speed
 247:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 248:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 249:Src/usbd_desc.c ****   */
 250:Src/usbd_desc.c **** uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 251:Src/usbd_desc.c **** {
 252:Src/usbd_desc.c ****   if(speed == 0)
 253:Src/usbd_desc.c ****   {
 254:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 255:Src/usbd_desc.c ****   }
 256:Src/usbd_desc.c ****   else
 257:Src/usbd_desc.c ****   {
ARM GAS  /tmp/ccZpg1wz.s 			page 7


 258:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 259:Src/usbd_desc.c ****   }
 260:Src/usbd_desc.c ****   return USBD_StrDesc;
 261:Src/usbd_desc.c **** }
 262:Src/usbd_desc.c **** 
 263:Src/usbd_desc.c **** /**
 264:Src/usbd_desc.c ****   * @brief  Return the manufacturer string descriptor
 265:Src/usbd_desc.c ****   * @param  speed : Current device speed
 266:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 267:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 268:Src/usbd_desc.c ****   */
 269:Src/usbd_desc.c **** uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 270:Src/usbd_desc.c **** {
 271:Src/usbd_desc.c ****   UNUSED(speed);
 272:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 273:Src/usbd_desc.c ****   return USBD_StrDesc;
 274:Src/usbd_desc.c **** }
 275:Src/usbd_desc.c **** 
 276:Src/usbd_desc.c **** /**
 277:Src/usbd_desc.c ****   * @brief  Return the serial number string descriptor
 278:Src/usbd_desc.c ****   * @param  speed : Current device speed
 279:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 280:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 281:Src/usbd_desc.c ****   */
 282:Src/usbd_desc.c **** uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 283:Src/usbd_desc.c **** {
 284:Src/usbd_desc.c ****   UNUSED(speed);
 285:Src/usbd_desc.c ****   *length = USB_SIZ_STRING_SERIAL;
 286:Src/usbd_desc.c **** 
 287:Src/usbd_desc.c ****   /* Update the serial number string descriptor with the data from the unique
 288:Src/usbd_desc.c ****    * ID */
 289:Src/usbd_desc.c ****   Get_SerialNum();
 290:Src/usbd_desc.c ****   /* USER CODE BEGIN USBD_FS_SerialStrDescriptor */
 291:Src/usbd_desc.c ****   
 292:Src/usbd_desc.c ****   /* USER CODE END USBD_FS_SerialStrDescriptor */
 293:Src/usbd_desc.c ****   return (uint8_t *) USBD_StringSerial;
 294:Src/usbd_desc.c **** }
 295:Src/usbd_desc.c **** 
 296:Src/usbd_desc.c **** /**
 297:Src/usbd_desc.c ****   * @brief  Return the configuration string descriptor
 298:Src/usbd_desc.c ****   * @param  speed : Current device speed
 299:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 300:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 301:Src/usbd_desc.c ****   */
 302:Src/usbd_desc.c **** uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 303:Src/usbd_desc.c **** {
 304:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 305:Src/usbd_desc.c ****   {
 306:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 307:Src/usbd_desc.c ****   }
 308:Src/usbd_desc.c ****   else
 309:Src/usbd_desc.c ****   {
 310:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 311:Src/usbd_desc.c ****   }
 312:Src/usbd_desc.c ****   return USBD_StrDesc;
 313:Src/usbd_desc.c **** }
 314:Src/usbd_desc.c **** 
ARM GAS  /tmp/ccZpg1wz.s 			page 8


 315:Src/usbd_desc.c **** /**
 316:Src/usbd_desc.c ****   * @brief  Return the interface string descriptor
 317:Src/usbd_desc.c ****   * @param  speed : Current device speed
 318:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 319:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 320:Src/usbd_desc.c ****   */
 321:Src/usbd_desc.c **** uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 322:Src/usbd_desc.c **** {
 323:Src/usbd_desc.c ****   if(speed == 0)
 324:Src/usbd_desc.c ****   {
 325:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 326:Src/usbd_desc.c ****   }
 327:Src/usbd_desc.c ****   else
 328:Src/usbd_desc.c ****   {
 329:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 330:Src/usbd_desc.c ****   }
 331:Src/usbd_desc.c ****   return USBD_StrDesc;
 332:Src/usbd_desc.c **** }
 333:Src/usbd_desc.c **** 
 334:Src/usbd_desc.c **** /**
 335:Src/usbd_desc.c ****   * @brief  Create the serial number string descriptor 
 336:Src/usbd_desc.c ****   * @param  None 
 337:Src/usbd_desc.c ****   * @retval None
 338:Src/usbd_desc.c ****   */
 339:Src/usbd_desc.c **** static void Get_SerialNum(void)
 340:Src/usbd_desc.c **** {
 341:Src/usbd_desc.c ****   uint32_t deviceserial0, deviceserial1, deviceserial2;
 342:Src/usbd_desc.c **** 
 343:Src/usbd_desc.c ****   deviceserial0 = *(uint32_t *) DEVICE_ID1;
 344:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *) DEVICE_ID2;
 345:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *) DEVICE_ID3;
 346:Src/usbd_desc.c **** 
 347:Src/usbd_desc.c ****   deviceserial0 += deviceserial2;
 348:Src/usbd_desc.c **** 
 349:Src/usbd_desc.c ****   if (deviceserial0 != 0)
 350:Src/usbd_desc.c ****   {
 351:Src/usbd_desc.c ****     IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 352:Src/usbd_desc.c ****     IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 353:Src/usbd_desc.c ****   }
 354:Src/usbd_desc.c **** }
 355:Src/usbd_desc.c **** 
 356:Src/usbd_desc.c **** /**
 357:Src/usbd_desc.c ****   * @brief  Convert Hex 32Bits value into char 
 358:Src/usbd_desc.c ****   * @param  value: value to convert
 359:Src/usbd_desc.c ****   * @param  pbuf: pointer to the buffer 
 360:Src/usbd_desc.c ****   * @param  len: buffer length
 361:Src/usbd_desc.c ****   * @retval None
 362:Src/usbd_desc.c ****   */
 363:Src/usbd_desc.c **** static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
 364:Src/usbd_desc.c **** {
  89              		.loc 1 364 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              	.LVL4:
  94 0000 30B5     		push	{r4, r5, lr}
  95              	.LCFI0:
ARM GAS  /tmp/ccZpg1wz.s 			page 9


  96              		.cfi_def_cfa_offset 12
  97              		.cfi_offset 4, -12
  98              		.cfi_offset 5, -8
  99              		.cfi_offset 14, -4
 365:Src/usbd_desc.c ****   uint8_t idx = 0;
 366:Src/usbd_desc.c **** 
 367:Src/usbd_desc.c ****   for (idx = 0; idx < len; idx++)
 100              		.loc 1 367 0
 101 0002 002A     		cmp	r2, #0
 102 0004 19D0     		beq	.L7
 103 0006 013A     		subs	r2, r2, #1
 104              	.LVL5:
 105 0008 D2B2     		uxtb	r2, r2
 106 000a 0132     		adds	r2, r2, #1
 107 000c 5200     		lsls	r2, r2, #1
 108 000e 0024     		movs	r4, #0
 368:Src/usbd_desc.c ****   {
 369:Src/usbd_desc.c ****     if (((value >> 28)) < 0xA)
 370:Src/usbd_desc.c ****     {
 371:Src/usbd_desc.c ****       pbuf[2 * idx] = (value >> 28) + '0';
 372:Src/usbd_desc.c ****     }
 373:Src/usbd_desc.c ****     else
 374:Src/usbd_desc.c ****     {
 375:Src/usbd_desc.c ****       pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 376:Src/usbd_desc.c ****     }
 377:Src/usbd_desc.c **** 
 378:Src/usbd_desc.c ****     value = value << 4;
 379:Src/usbd_desc.c **** 
 380:Src/usbd_desc.c ****     pbuf[2 * idx + 1] = 0;
 109              		.loc 1 380 0
 110 0010 0025     		movs	r5, #0
 111 0012 07E0     		b	.L11
 112              	.LVL6:
 113              	.L15:
 371:Src/usbd_desc.c ****     }
 114              		.loc 1 371 0
 115 0014 3033     		adds	r3, r3, #48
 116 0016 0234     		adds	r4, r4, #2
 117 0018 0B70     		strb	r3, [r1]
 118              		.loc 1 380 0
 119 001a 4D70     		strb	r5, [r1, #1]
 378:Src/usbd_desc.c **** 
 120              		.loc 1 378 0
 121 001c 0001     		lsls	r0, r0, #4
 122              	.LVL7:
 123 001e 0231     		adds	r1, r1, #2
 367:Src/usbd_desc.c ****   {
 124              		.loc 1 367 0
 125 0020 9442     		cmp	r4, r2
 126 0022 0AD0     		beq	.L7
 127              	.L11:
 369:Src/usbd_desc.c ****     {
 128              		.loc 1 369 0
 129 0024 030F     		lsrs	r3, r0, #28
 130 0026 092B     		cmp	r3, #9
 131 0028 F4D9     		bls	.L15
 375:Src/usbd_desc.c ****     }
ARM GAS  /tmp/ccZpg1wz.s 			page 10


 132              		.loc 1 375 0
 133 002a 3733     		adds	r3, r3, #55
 134 002c 0234     		adds	r4, r4, #2
 135 002e 0B70     		strb	r3, [r1]
 136              		.loc 1 380 0
 137 0030 4D70     		strb	r5, [r1, #1]
 378:Src/usbd_desc.c **** 
 138              		.loc 1 378 0
 139 0032 0001     		lsls	r0, r0, #4
 140              	.LVL8:
 141 0034 0231     		adds	r1, r1, #2
 367:Src/usbd_desc.c ****   {
 142              		.loc 1 367 0
 143 0036 9442     		cmp	r4, r2
 144 0038 F4D1     		bne	.L11
 145              	.L7:
 381:Src/usbd_desc.c ****   }
 382:Src/usbd_desc.c **** }
 146              		.loc 1 382 0
 147              		@ sp needed
 148 003a 30BD     		pop	{r4, r5, pc}
 149              		.cfi_endproc
 150              	.LFE49:
 152              		.section	.text.USBD_FS_SerialStrDescriptor,"ax",%progbits
 153              		.align	2
 154              		.global	USBD_FS_SerialStrDescriptor
 155              		.code	16
 156              		.thumb_func
 158              	USBD_FS_SerialStrDescriptor:
 159              	.LFB45:
 283:Src/usbd_desc.c ****   UNUSED(speed);
 160              		.loc 1 283 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              	.LVL9:
 285:Src/usbd_desc.c **** 
 165              		.loc 1 285 0
 166 0000 1A23     		movs	r3, #26
 283:Src/usbd_desc.c ****   UNUSED(speed);
 167              		.loc 1 283 0
 168 0002 70B5     		push	{r4, r5, r6, lr}
 169              	.LCFI1:
 170              		.cfi_def_cfa_offset 16
 171              		.cfi_offset 4, -16
 172              		.cfi_offset 5, -12
 173              		.cfi_offset 6, -8
 174              		.cfi_offset 14, -4
 285:Src/usbd_desc.c **** 
 175              		.loc 1 285 0
 176 0004 0B80     		strh	r3, [r1]
 177              	.LBB4:
 178              	.LBB5:
 343:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *) DEVICE_ID2;
 179              		.loc 1 343 0
 180 0006 0C4B     		ldr	r3, .L21
 181 0008 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccZpg1wz.s 			page 11


 182              	.LVL10:
 345:Src/usbd_desc.c **** 
 183              		.loc 1 345 0
 184 000a 0C4B     		ldr	r3, .L21+4
 185              	.LVL11:
 347:Src/usbd_desc.c **** 
 186              		.loc 1 347 0
 187 000c 1B68     		ldr	r3, [r3]
 188              	.LVL12:
 189 000e C018     		adds	r0, r0, r3
 190              	.LVL13:
 349:Src/usbd_desc.c ****   {
 191              		.loc 1 349 0
 192 0010 0028     		cmp	r0, #0
 193 0012 02D1     		bne	.L20
 194 0014 0A4C     		ldr	r4, .L21+8
 195              	.LVL14:
 196              	.L17:
 197              	.LBE5:
 198              	.LBE4:
 294:Src/usbd_desc.c **** 
 199              		.loc 1 294 0
 200 0016 2000     		movs	r0, r4
 201              		@ sp needed
 202 0018 70BD     		pop	{r4, r5, r6, pc}
 203              	.LVL15:
 204              	.L20:
 205              	.LBB7:
 206              	.LBB6:
 351:Src/usbd_desc.c ****     IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 207              		.loc 1 351 0
 208 001a 094C     		ldr	r4, .L21+8
 344:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *) DEVICE_ID3;
 209              		.loc 1 344 0
 210 001c 094B     		ldr	r3, .L21+12
 211              	.LVL16:
 351:Src/usbd_desc.c ****     IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 212              		.loc 1 351 0
 213 001e A11C     		adds	r1, r4, #2
 214              	.LVL17:
 215 0020 0822     		movs	r2, #8
 344:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *) DEVICE_ID3;
 216              		.loc 1 344 0
 217 0022 1D68     		ldr	r5, [r3]
 351:Src/usbd_desc.c ****     IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 218              		.loc 1 351 0
 219 0024 FFF7FEFF 		bl	IntToUnicode
 220              	.LVL18:
 352:Src/usbd_desc.c ****   }
 221              		.loc 1 352 0
 222 0028 2100     		movs	r1, r4
 223 002a 0422     		movs	r2, #4
 224 002c 1231     		adds	r1, r1, #18
 225 002e 2800     		movs	r0, r5
 226 0030 FFF7FEFF 		bl	IntToUnicode
 227              	.LVL19:
 228 0034 EFE7     		b	.L17
ARM GAS  /tmp/ccZpg1wz.s 			page 12


 229              	.L22:
 230 0036 C046     		.align	2
 231              	.L21:
 232 0038 ACF7FF1F 		.word	536868780
 233 003c B4F7FF1F 		.word	536868788
 234 0040 00000000 		.word	.LANCHOR2
 235 0044 B0F7FF1F 		.word	536868784
 236              	.LBE6:
 237              	.LBE7:
 238              		.cfi_endproc
 239              	.LFE45:
 241              		.section	.text.USBD_FS_ManufacturerStrDescriptor,"ax",%progbits
 242              		.align	2
 243              		.global	USBD_FS_ManufacturerStrDescriptor
 244              		.code	16
 245              		.thumb_func
 247              	USBD_FS_ManufacturerStrDescriptor:
 248              	.LFB44:
 270:Src/usbd_desc.c ****   UNUSED(speed);
 249              		.loc 1 270 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              	.LVL20:
 254 0000 10B5     		push	{r4, lr}
 255              	.LCFI2:
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 4, -8
 258              		.cfi_offset 14, -4
 272:Src/usbd_desc.c ****   return USBD_StrDesc;
 259              		.loc 1 272 0
 260 0002 044C     		ldr	r4, .L24
 270:Src/usbd_desc.c ****   UNUSED(speed);
 261              		.loc 1 270 0
 262 0004 0A00     		movs	r2, r1
 272:Src/usbd_desc.c ****   return USBD_StrDesc;
 263              		.loc 1 272 0
 264 0006 0448     		ldr	r0, .L24+4
 265              	.LVL21:
 266 0008 2100     		movs	r1, r4
 267              	.LVL22:
 268 000a FFF7FEFF 		bl	USBD_GetString
 269              	.LVL23:
 274:Src/usbd_desc.c **** 
 270              		.loc 1 274 0
 271              		@ sp needed
 272 000e 2000     		movs	r0, r4
 273 0010 10BD     		pop	{r4, pc}
 274              	.L25:
 275 0012 C046     		.align	2
 276              	.L24:
 277 0014 00000000 		.word	USBD_StrDesc
 278 0018 00000000 		.word	.LC8
 279              		.cfi_endproc
 280              	.LFE44:
 282              		.section	.text.USBD_FS_ProductStrDescriptor,"ax",%progbits
 283              		.align	2
ARM GAS  /tmp/ccZpg1wz.s 			page 13


 284              		.global	USBD_FS_ProductStrDescriptor
 285              		.code	16
 286              		.thumb_func
 288              	USBD_FS_ProductStrDescriptor:
 289              	.LFB43:
 251:Src/usbd_desc.c ****   if(speed == 0)
 290              		.loc 1 251 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294              	.LVL24:
 295 0000 10B5     		push	{r4, lr}
 296              	.LCFI3:
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 4, -8
 299              		.cfi_offset 14, -4
 300              	.LBB10:
 301              	.LBB11:
 254:Src/usbd_desc.c ****   }
 302              		.loc 1 254 0
 303 0002 044C     		ldr	r4, .L27
 304              	.LBE11:
 305              	.LBE10:
 251:Src/usbd_desc.c ****   if(speed == 0)
 306              		.loc 1 251 0
 307 0004 0A00     		movs	r2, r1
 308              	.LVL25:
 309              	.LBB13:
 310              	.LBB12:
 254:Src/usbd_desc.c ****   }
 311              		.loc 1 254 0
 312 0006 0448     		ldr	r0, .L27+4
 313              	.LVL26:
 314 0008 2100     		movs	r1, r4
 315              	.LVL27:
 316 000a FFF7FEFF 		bl	USBD_GetString
 317              	.LVL28:
 318              	.LBE12:
 319              	.LBE13:
 261:Src/usbd_desc.c **** 
 320              		.loc 1 261 0
 321              		@ sp needed
 322 000e 2000     		movs	r0, r4
 323 0010 10BD     		pop	{r4, pc}
 324              	.L28:
 325 0012 C046     		.align	2
 326              	.L27:
 327 0014 00000000 		.word	USBD_StrDesc
 328 0018 14000000 		.word	.LC11
 329              		.cfi_endproc
 330              	.LFE43:
 332              		.section	.text.USBD_FS_ConfigStrDescriptor,"ax",%progbits
 333              		.align	2
 334              		.global	USBD_FS_ConfigStrDescriptor
 335              		.code	16
 336              		.thumb_func
 338              	USBD_FS_ConfigStrDescriptor:
ARM GAS  /tmp/ccZpg1wz.s 			page 14


 339              	.LFB46:
 303:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 340              		.loc 1 303 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344              	.LVL29:
 345 0000 10B5     		push	{r4, lr}
 346              	.LCFI4:
 347              		.cfi_def_cfa_offset 8
 348              		.cfi_offset 4, -8
 349              		.cfi_offset 14, -4
 350              	.LBB16:
 351              	.LBB17:
 306:Src/usbd_desc.c ****   }
 352              		.loc 1 306 0
 353 0002 044C     		ldr	r4, .L30
 354              	.LBE17:
 355              	.LBE16:
 303:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 356              		.loc 1 303 0
 357 0004 0A00     		movs	r2, r1
 358              	.LVL30:
 359              	.LBB19:
 360              	.LBB18:
 306:Src/usbd_desc.c ****   }
 361              		.loc 1 306 0
 362 0006 0448     		ldr	r0, .L30+4
 363              	.LVL31:
 364 0008 2100     		movs	r1, r4
 365              	.LVL32:
 366 000a FFF7FEFF 		bl	USBD_GetString
 367              	.LVL33:
 368              	.LBE18:
 369              	.LBE19:
 313:Src/usbd_desc.c **** 
 370              		.loc 1 313 0
 371              		@ sp needed
 372 000e 2000     		movs	r0, r4
 373 0010 10BD     		pop	{r4, pc}
 374              	.L31:
 375 0012 C046     		.align	2
 376              	.L30:
 377 0014 00000000 		.word	USBD_StrDesc
 378 0018 2C000000 		.word	.LC14
 379              		.cfi_endproc
 380              	.LFE46:
 382              		.section	.text.USBD_FS_InterfaceStrDescriptor,"ax",%progbits
 383              		.align	2
 384              		.global	USBD_FS_InterfaceStrDescriptor
 385              		.code	16
 386              		.thumb_func
 388              	USBD_FS_InterfaceStrDescriptor:
 389              	.LFB47:
 322:Src/usbd_desc.c ****   if(speed == 0)
 390              		.loc 1 322 0
 391              		.cfi_startproc
ARM GAS  /tmp/ccZpg1wz.s 			page 15


 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394              	.LVL34:
 395 0000 10B5     		push	{r4, lr}
 396              	.LCFI5:
 397              		.cfi_def_cfa_offset 8
 398              		.cfi_offset 4, -8
 399              		.cfi_offset 14, -4
 400              	.LBB22:
 401              	.LBB23:
 325:Src/usbd_desc.c ****   }
 402              		.loc 1 325 0
 403 0002 044C     		ldr	r4, .L33
 404              	.LBE23:
 405              	.LBE22:
 322:Src/usbd_desc.c ****   if(speed == 0)
 406              		.loc 1 322 0
 407 0004 0A00     		movs	r2, r1
 408              	.LVL35:
 409              	.LBB25:
 410              	.LBB24:
 325:Src/usbd_desc.c ****   }
 411              		.loc 1 325 0
 412 0006 0448     		ldr	r0, .L33+4
 413              	.LVL36:
 414 0008 2100     		movs	r1, r4
 415              	.LVL37:
 416 000a FFF7FEFF 		bl	USBD_GetString
 417              	.LVL38:
 418              	.LBE24:
 419              	.LBE25:
 332:Src/usbd_desc.c **** 
 420              		.loc 1 332 0
 421              		@ sp needed
 422 000e 2000     		movs	r0, r4
 423 0010 10BD     		pop	{r4, pc}
 424              	.L34:
 425 0012 C046     		.align	2
 426              	.L33:
 427 0014 00000000 		.word	USBD_StrDesc
 428 0018 38000000 		.word	.LC17
 429              		.cfi_endproc
 430              	.LFE47:
 432              		.global	USBD_StringSerial
 433              		.comm	USBD_StrDesc,512,4
 434              		.global	USBD_LangIDDesc
 435              		.global	USBD_FS_DeviceDesc
 436              		.global	FS_Desc
 437              		.section	.data.FS_Desc,"aw",%progbits
 438              		.align	2
 441              	FS_Desc:
 442 0000 00000000 		.word	USBD_FS_DeviceDescriptor
 443 0004 00000000 		.word	USBD_FS_LangIDStrDescriptor
 444 0008 00000000 		.word	USBD_FS_ManufacturerStrDescriptor
 445 000c 00000000 		.word	USBD_FS_ProductStrDescriptor
 446 0010 00000000 		.word	USBD_FS_SerialStrDescriptor
 447 0014 00000000 		.word	USBD_FS_ConfigStrDescriptor
ARM GAS  /tmp/ccZpg1wz.s 			page 16


 448 0018 00000000 		.word	USBD_FS_InterfaceStrDescriptor
 449              		.section	.rodata.str1.4,"aMS",%progbits,1
 450              		.align	2
 451              	.LC8:
 452 0000 53544D69 		.ascii	"STMicroelectronics\000"
 452      63726F65 
 452      6C656374 
 452      726F6E69 
 452      637300
 453 0013 00       		.space	1
 454              	.LC11:
 455 0014 53544D33 		.ascii	"STM32 Virtual ComPort\000"
 455      32205669 
 455      72747561 
 455      6C20436F 
 455      6D506F72 
 456 002a 0000     		.space	2
 457              	.LC14:
 458 002c 43444320 		.ascii	"CDC Config\000"
 458      436F6E66 
 458      696700
 459 0037 00       		.space	1
 460              	.LC17:
 461 0038 43444320 		.ascii	"CDC Interface\000"
 461      496E7465 
 461      72666163 
 461      6500
 462              		.section	.data.USBD_LangIDDesc,"aw",%progbits
 463              		.align	2
 464              		.set	.LANCHOR1,. + 0
 467              	USBD_LangIDDesc:
 468 0000 04       		.byte	4
 469 0001 03       		.byte	3
 470 0002 09       		.byte	9
 471 0003 04       		.byte	4
 472              		.section	.data.USBD_StringSerial,"aw",%progbits
 473              		.align	2
 474              		.set	.LANCHOR2,. + 0
 477              	USBD_StringSerial:
 478 0000 1A       		.byte	26
 479 0001 03       		.byte	3
 480 0002 00000000 		.space	24
 480      00000000 
 480      00000000 
 480      00000000 
 480      00000000 
 481              		.section	.data.USBD_FS_DeviceDesc,"aw",%progbits
 482              		.align	2
 483              		.set	.LANCHOR0,. + 0
 486              	USBD_FS_DeviceDesc:
 487 0000 12       		.byte	18
 488 0001 01       		.byte	1
 489 0002 00       		.byte	0
 490 0003 02       		.byte	2
 491 0004 02       		.byte	2
 492 0005 02       		.byte	2
 493 0006 00       		.byte	0
ARM GAS  /tmp/ccZpg1wz.s 			page 17


 494 0007 40       		.byte	64
 495 0008 83       		.byte	-125
 496 0009 04       		.byte	4
 497 000a 40       		.byte	64
 498 000b 57       		.byte	87
 499 000c 00       		.byte	0
 500 000d 02       		.byte	2
 501 000e 01       		.byte	1
 502 000f 02       		.byte	2
 503 0010 03       		.byte	3
 504 0011 01       		.byte	1
 505              		.text
 506              	.Letext0:
 507              		.file 2 "/opt/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 508              		.file 3 "/opt/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 509              		.file 4 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 510              		.file 5 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_ctlreq.h"
ARM GAS  /tmp/ccZpg1wz.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 usbd_desc.c
     /tmp/ccZpg1wz.s:20     .text.USBD_FS_DeviceDescriptor:00000000 $t
     /tmp/ccZpg1wz.s:25     .text.USBD_FS_DeviceDescriptor:00000000 USBD_FS_DeviceDescriptor
     /tmp/ccZpg1wz.s:47     .text.USBD_FS_DeviceDescriptor:00000008 $d
     /tmp/ccZpg1wz.s:52     .text.USBD_FS_LangIDStrDescriptor:00000000 $t
     /tmp/ccZpg1wz.s:57     .text.USBD_FS_LangIDStrDescriptor:00000000 USBD_FS_LangIDStrDescriptor
     /tmp/ccZpg1wz.s:78     .text.USBD_FS_LangIDStrDescriptor:00000008 $d
     /tmp/ccZpg1wz.s:83     .text.IntToUnicode:00000000 $t
     /tmp/ccZpg1wz.s:87     .text.IntToUnicode:00000000 IntToUnicode
     /tmp/ccZpg1wz.s:153    .text.USBD_FS_SerialStrDescriptor:00000000 $t
     /tmp/ccZpg1wz.s:158    .text.USBD_FS_SerialStrDescriptor:00000000 USBD_FS_SerialStrDescriptor
     /tmp/ccZpg1wz.s:232    .text.USBD_FS_SerialStrDescriptor:00000038 $d
     /tmp/ccZpg1wz.s:242    .text.USBD_FS_ManufacturerStrDescriptor:00000000 $t
     /tmp/ccZpg1wz.s:247    .text.USBD_FS_ManufacturerStrDescriptor:00000000 USBD_FS_ManufacturerStrDescriptor
     /tmp/ccZpg1wz.s:277    .text.USBD_FS_ManufacturerStrDescriptor:00000014 $d
                            *COM*:00000200 USBD_StrDesc
     /tmp/ccZpg1wz.s:283    .text.USBD_FS_ProductStrDescriptor:00000000 $t
     /tmp/ccZpg1wz.s:288    .text.USBD_FS_ProductStrDescriptor:00000000 USBD_FS_ProductStrDescriptor
     /tmp/ccZpg1wz.s:327    .text.USBD_FS_ProductStrDescriptor:00000014 $d
     /tmp/ccZpg1wz.s:333    .text.USBD_FS_ConfigStrDescriptor:00000000 $t
     /tmp/ccZpg1wz.s:338    .text.USBD_FS_ConfigStrDescriptor:00000000 USBD_FS_ConfigStrDescriptor
     /tmp/ccZpg1wz.s:377    .text.USBD_FS_ConfigStrDescriptor:00000014 $d
     /tmp/ccZpg1wz.s:383    .text.USBD_FS_InterfaceStrDescriptor:00000000 $t
     /tmp/ccZpg1wz.s:388    .text.USBD_FS_InterfaceStrDescriptor:00000000 USBD_FS_InterfaceStrDescriptor
     /tmp/ccZpg1wz.s:427    .text.USBD_FS_InterfaceStrDescriptor:00000014 $d
     /tmp/ccZpg1wz.s:477    .data.USBD_StringSerial:00000000 USBD_StringSerial
     /tmp/ccZpg1wz.s:467    .data.USBD_LangIDDesc:00000000 USBD_LangIDDesc
     /tmp/ccZpg1wz.s:486    .data.USBD_FS_DeviceDesc:00000000 USBD_FS_DeviceDesc
     /tmp/ccZpg1wz.s:441    .data.FS_Desc:00000000 FS_Desc
     /tmp/ccZpg1wz.s:438    .data.FS_Desc:00000000 $d
     /tmp/ccZpg1wz.s:450    .rodata.str1.4:00000000 $d
     /tmp/ccZpg1wz.s:463    .data.USBD_LangIDDesc:00000000 $d
     /tmp/ccZpg1wz.s:473    .data.USBD_StringSerial:00000000 $d
     /tmp/ccZpg1wz.s:482    .data.USBD_FS_DeviceDesc:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
USBD_GetString
