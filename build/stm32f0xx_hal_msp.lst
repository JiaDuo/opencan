ARM GAS  /tmp/ccVRKhKL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f0xx_hal_msp.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_MspInit,"ax",%progbits
  20              		.align	2
  21              		.global	HAL_MspInit
  22              		.code	16
  23              		.thumb_func
  25              	HAL_MspInit:
  26              	.LFB40:
  27              		.file 1 "Src/stm32f0xx_hal_msp.c"
   1:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f0xx_hal_msp.c **** /**
   3:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
   4:Src/stm32f0xx_hal_msp.c ****   * File Name          : stm32f0xx_hal_msp.c
   5:Src/stm32f0xx_hal_msp.c ****   * Description        : This file provides code for the MSP Initialization 
   6:Src/stm32f0xx_hal_msp.c ****   *                      and de-Initialization codes.
   7:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
   8:Src/stm32f0xx_hal_msp.c ****   * @attention
   9:Src/stm32f0xx_hal_msp.c ****   *
  10:Src/stm32f0xx_hal_msp.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  11:Src/stm32f0xx_hal_msp.c ****   * All rights reserved.</center></h2>
  12:Src/stm32f0xx_hal_msp.c ****   *
  13:Src/stm32f0xx_hal_msp.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:Src/stm32f0xx_hal_msp.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:Src/stm32f0xx_hal_msp.c ****   * the License. You may obtain a copy of the License at:
  16:Src/stm32f0xx_hal_msp.c ****   *                             www.st.com/SLA0044
  17:Src/stm32f0xx_hal_msp.c ****   *
  18:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
  19:Src/stm32f0xx_hal_msp.c ****   */
  20:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Header */
  21:Src/stm32f0xx_hal_msp.c **** 
  22:Src/stm32f0xx_hal_msp.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/stm32f0xx_hal_msp.c **** #include "main.h"
  24:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Includes */
  25:Src/stm32f0xx_hal_msp.c **** 
  26:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Includes */
  27:Src/stm32f0xx_hal_msp.c **** 
  28:Src/stm32f0xx_hal_msp.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN TD */
  30:Src/stm32f0xx_hal_msp.c **** 
  31:Src/stm32f0xx_hal_msp.c **** /* USER CODE END TD */
ARM GAS  /tmp/ccVRKhKL.s 			page 2


  32:Src/stm32f0xx_hal_msp.c **** 
  33:Src/stm32f0xx_hal_msp.c **** /* Private define ------------------------------------------------------------*/
  34:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Define */
  35:Src/stm32f0xx_hal_msp.c ****  
  36:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Define */
  37:Src/stm32f0xx_hal_msp.c **** 
  38:Src/stm32f0xx_hal_msp.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Macro */
  40:Src/stm32f0xx_hal_msp.c **** 
  41:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Macro */
  42:Src/stm32f0xx_hal_msp.c **** 
  43:Src/stm32f0xx_hal_msp.c **** /* Private variables ---------------------------------------------------------*/
  44:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN PV */
  45:Src/stm32f0xx_hal_msp.c **** 
  46:Src/stm32f0xx_hal_msp.c **** /* USER CODE END PV */
  47:Src/stm32f0xx_hal_msp.c **** 
  48:Src/stm32f0xx_hal_msp.c **** /* Private function prototypes -----------------------------------------------*/
  49:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN PFP */
  50:Src/stm32f0xx_hal_msp.c **** 
  51:Src/stm32f0xx_hal_msp.c **** /* USER CODE END PFP */
  52:Src/stm32f0xx_hal_msp.c **** 
  53:Src/stm32f0xx_hal_msp.c **** /* External functions --------------------------------------------------------*/
  54:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN ExternalFunctions */
  55:Src/stm32f0xx_hal_msp.c **** 
  56:Src/stm32f0xx_hal_msp.c **** /* USER CODE END ExternalFunctions */
  57:Src/stm32f0xx_hal_msp.c **** 
  58:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN 0 */
  59:Src/stm32f0xx_hal_msp.c **** 
  60:Src/stm32f0xx_hal_msp.c **** /* USER CODE END 0 */
  61:Src/stm32f0xx_hal_msp.c **** /**
  62:Src/stm32f0xx_hal_msp.c ****   * Initializes the Global MSP.
  63:Src/stm32f0xx_hal_msp.c ****   */
  64:Src/stm32f0xx_hal_msp.c **** void HAL_MspInit(void)
  65:Src/stm32f0xx_hal_msp.c **** {
  28              		.loc 1 65 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LBB2:
  66:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 0 */
  67:Src/stm32f0xx_hal_msp.c **** 
  68:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END MspInit 0 */
  69:Src/stm32f0xx_hal_msp.c **** 
  70:Src/stm32f0xx_hal_msp.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE();
  34              		.loc 1 70 0
  35 0000 0120     		movs	r0, #1
  36 0002 0A4B     		ldr	r3, .L2
  37              	.LBE2:
  65:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 0 */
  38              		.loc 1 65 0
  39 0004 82B0     		sub	sp, sp, #8
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 8
  42              	.LBB3:
  43              		.loc 1 70 0
  44 0006 9969     		ldr	r1, [r3, #24]
ARM GAS  /tmp/ccVRKhKL.s 			page 3


  45 0008 0143     		orrs	r1, r0
  46 000a 9961     		str	r1, [r3, #24]
  47 000c 9A69     		ldr	r2, [r3, #24]
  48 000e 0240     		ands	r2, r0
  49 0010 0092     		str	r2, [sp]
  50 0012 009A     		ldr	r2, [sp]
  51              	.LBE3:
  52              	.LBB4:
  71:Src/stm32f0xx_hal_msp.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  53              		.loc 1 71 0
  54 0014 8022     		movs	r2, #128
  55 0016 D969     		ldr	r1, [r3, #28]
  56 0018 5205     		lsls	r2, r2, #21
  57 001a 1143     		orrs	r1, r2
  58 001c D961     		str	r1, [r3, #28]
  59 001e DB69     		ldr	r3, [r3, #28]
  60 0020 1A40     		ands	r2, r3
  61 0022 0192     		str	r2, [sp, #4]
  62 0024 019B     		ldr	r3, [sp, #4]
  63              	.LBE4:
  72:Src/stm32f0xx_hal_msp.c **** 
  73:Src/stm32f0xx_hal_msp.c ****   /* System interrupt init*/
  74:Src/stm32f0xx_hal_msp.c **** 
  75:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 1 */
  76:Src/stm32f0xx_hal_msp.c **** 
  77:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END MspInit 1 */
  78:Src/stm32f0xx_hal_msp.c **** }
  64              		.loc 1 78 0
  65 0026 02B0     		add	sp, sp, #8
  66              		@ sp needed
  67 0028 7047     		bx	lr
  68              	.L3:
  69 002a C046     		.align	2
  70              	.L2:
  71 002c 00100240 		.word	1073876992
  72              		.cfi_endproc
  73              	.LFE40:
  75              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
  76              		.align	2
  77              		.global	HAL_CAN_MspInit
  78              		.code	16
  79              		.thumb_func
  81              	HAL_CAN_MspInit:
  82              	.LFB41:
  79:Src/stm32f0xx_hal_msp.c **** 
  80:Src/stm32f0xx_hal_msp.c **** /**
  81:Src/stm32f0xx_hal_msp.c **** * @brief CAN MSP Initialization
  82:Src/stm32f0xx_hal_msp.c **** * This function configures the hardware resources used in this example
  83:Src/stm32f0xx_hal_msp.c **** * @param hcan: CAN handle pointer
  84:Src/stm32f0xx_hal_msp.c **** * @retval None
  85:Src/stm32f0xx_hal_msp.c **** */
  86:Src/stm32f0xx_hal_msp.c **** void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
  87:Src/stm32f0xx_hal_msp.c **** {
  83              		.loc 1 87 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 32
  86              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccVRKhKL.s 			page 4


  87              	.LVL0:
  88 0000 10B5     		push	{r4, lr}
  89              	.LCFI1:
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 4, -8
  92              		.cfi_offset 14, -4
  93 0002 0400     		movs	r4, r0
  94 0004 88B0     		sub	sp, sp, #32
  95              	.LCFI2:
  96              		.cfi_def_cfa_offset 40
  88:Src/stm32f0xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  97              		.loc 1 88 0
  98 0006 1422     		movs	r2, #20
  99 0008 0021     		movs	r1, #0
 100 000a 03A8     		add	r0, sp, #12
 101              	.LVL1:
 102 000c FFF7FEFF 		bl	memset
 103              	.LVL2:
  89:Src/stm32f0xx_hal_msp.c ****   if(hcan->Instance==CAN)
 104              		.loc 1 89 0
 105 0010 174B     		ldr	r3, .L8
 106 0012 2268     		ldr	r2, [r4]
 107 0014 9A42     		cmp	r2, r3
 108 0016 01D0     		beq	.L7
 109              	.L4:
  90:Src/stm32f0xx_hal_msp.c ****   {
  91:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN CAN_MspInit 0 */
  92:Src/stm32f0xx_hal_msp.c **** 
  93:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END CAN_MspInit 0 */
  94:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
  95:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_CAN1_CLK_ENABLE();
  96:Src/stm32f0xx_hal_msp.c ****   
  97:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
  98:Src/stm32f0xx_hal_msp.c ****     /**CAN GPIO Configuration    
  99:Src/stm32f0xx_hal_msp.c ****     PB8     ------> CAN_RX
 100:Src/stm32f0xx_hal_msp.c ****     PB9     ------> CAN_TX 
 101:Src/stm32f0xx_hal_msp.c ****     */
 102:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 103:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 104:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 105:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 106:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF4_CAN;
 107:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 108:Src/stm32f0xx_hal_msp.c **** 
 109:Src/stm32f0xx_hal_msp.c ****     /* CAN interrupt Init */
 110:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_SetPriority(CEC_CAN_IRQn, 0, 0);
 111:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(CEC_CAN_IRQn);
 112:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN CAN_MspInit 1 */
 113:Src/stm32f0xx_hal_msp.c **** 
 114:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END CAN_MspInit 1 */
 115:Src/stm32f0xx_hal_msp.c ****   }
 116:Src/stm32f0xx_hal_msp.c **** 
 117:Src/stm32f0xx_hal_msp.c **** }
 110              		.loc 1 117 0
 111 0018 08B0     		add	sp, sp, #32
 112              		@ sp needed
 113              	.LVL3:
ARM GAS  /tmp/ccVRKhKL.s 			page 5


 114 001a 10BD     		pop	{r4, pc}
 115              	.LVL4:
 116              	.L7:
 117              	.LBB5:
  95:Src/stm32f0xx_hal_msp.c ****   
 118              		.loc 1 95 0
 119 001c 8022     		movs	r2, #128
 120 001e 154B     		ldr	r3, .L8+4
 121 0020 9204     		lsls	r2, r2, #18
 122 0022 D969     		ldr	r1, [r3, #28]
 123              	.LBE5:
 107:Src/stm32f0xx_hal_msp.c **** 
 124              		.loc 1 107 0
 125 0024 1448     		ldr	r0, .L8+8
 126              	.LBB6:
  95:Src/stm32f0xx_hal_msp.c ****   
 127              		.loc 1 95 0
 128 0026 1143     		orrs	r1, r2
 129 0028 D961     		str	r1, [r3, #28]
 130 002a D969     		ldr	r1, [r3, #28]
 131 002c 0A40     		ands	r2, r1
 132 002e 0192     		str	r2, [sp, #4]
 133 0030 019A     		ldr	r2, [sp, #4]
 134              	.LBE6:
 135              	.LBB7:
  97:Src/stm32f0xx_hal_msp.c ****     /**CAN GPIO Configuration    
 136              		.loc 1 97 0
 137 0032 8022     		movs	r2, #128
 138 0034 5969     		ldr	r1, [r3, #20]
 139 0036 D202     		lsls	r2, r2, #11
 140 0038 1143     		orrs	r1, r2
 141 003a 5961     		str	r1, [r3, #20]
 142 003c 5B69     		ldr	r3, [r3, #20]
 143              	.LBE7:
 107:Src/stm32f0xx_hal_msp.c **** 
 144              		.loc 1 107 0
 145 003e 03A9     		add	r1, sp, #12
 146              	.LBB8:
  97:Src/stm32f0xx_hal_msp.c ****     /**CAN GPIO Configuration    
 147              		.loc 1 97 0
 148 0040 1A40     		ands	r2, r3
 149 0042 0292     		str	r2, [sp, #8]
 150 0044 029B     		ldr	r3, [sp, #8]
 151              	.LBE8:
 102:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 152              		.loc 1 102 0
 153 0046 C023     		movs	r3, #192
 154 0048 9B00     		lsls	r3, r3, #2
 155 004a 0393     		str	r3, [sp, #12]
 103:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 156              		.loc 1 103 0
 157 004c 0223     		movs	r3, #2
 158 004e 0493     		str	r3, [sp, #16]
 105:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF4_CAN;
 159              		.loc 1 105 0
 160 0050 0133     		adds	r3, r3, #1
 161 0052 0693     		str	r3, [sp, #24]
ARM GAS  /tmp/ccVRKhKL.s 			page 6


 106:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 162              		.loc 1 106 0
 163 0054 0133     		adds	r3, r3, #1
 164 0056 0793     		str	r3, [sp, #28]
 107:Src/stm32f0xx_hal_msp.c **** 
 165              		.loc 1 107 0
 166 0058 FFF7FEFF 		bl	HAL_GPIO_Init
 167              	.LVL5:
 110:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(CEC_CAN_IRQn);
 168              		.loc 1 110 0
 169 005c 0022     		movs	r2, #0
 170 005e 0021     		movs	r1, #0
 171 0060 1E20     		movs	r0, #30
 172 0062 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 173              	.LVL6:
 111:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN CAN_MspInit 1 */
 174              		.loc 1 111 0
 175 0066 1E20     		movs	r0, #30
 176 0068 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 177              	.LVL7:
 178              		.loc 1 117 0
 179 006c D4E7     		b	.L4
 180              	.L9:
 181 006e C046     		.align	2
 182              	.L8:
 183 0070 00640040 		.word	1073767424
 184 0074 00100240 		.word	1073876992
 185 0078 00040048 		.word	1207960576
 186              		.cfi_endproc
 187              	.LFE41:
 189              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 190              		.align	2
 191              		.global	HAL_CAN_MspDeInit
 192              		.code	16
 193              		.thumb_func
 195              	HAL_CAN_MspDeInit:
 196              	.LFB42:
 118:Src/stm32f0xx_hal_msp.c **** 
 119:Src/stm32f0xx_hal_msp.c **** /**
 120:Src/stm32f0xx_hal_msp.c **** * @brief CAN MSP De-Initialization
 121:Src/stm32f0xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 122:Src/stm32f0xx_hal_msp.c **** * @param hcan: CAN handle pointer
 123:Src/stm32f0xx_hal_msp.c **** * @retval None
 124:Src/stm32f0xx_hal_msp.c **** */
 125:Src/stm32f0xx_hal_msp.c **** void HAL_CAN_MspDeInit(CAN_HandleTypeDef* hcan)
 126:Src/stm32f0xx_hal_msp.c **** {
 197              		.loc 1 126 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              	.LVL8:
 127:Src/stm32f0xx_hal_msp.c ****   if(hcan->Instance==CAN)
 202              		.loc 1 127 0
 203 0000 094B     		ldr	r3, .L13
 204 0002 0268     		ldr	r2, [r0]
 126:Src/stm32f0xx_hal_msp.c ****   if(hcan->Instance==CAN)
 205              		.loc 1 126 0
ARM GAS  /tmp/ccVRKhKL.s 			page 7


 206 0004 10B5     		push	{r4, lr}
 207              	.LCFI3:
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 4, -8
 210              		.cfi_offset 14, -4
 211              		.loc 1 127 0
 212 0006 9A42     		cmp	r2, r3
 213 0008 00D0     		beq	.L12
 214              	.LVL9:
 215              	.L10:
 128:Src/stm32f0xx_hal_msp.c ****   {
 129:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN CAN_MspDeInit 0 */
 130:Src/stm32f0xx_hal_msp.c **** 
 131:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END CAN_MspDeInit 0 */
 132:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 133:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_CAN1_CLK_DISABLE();
 134:Src/stm32f0xx_hal_msp.c ****   
 135:Src/stm32f0xx_hal_msp.c ****     /**CAN GPIO Configuration    
 136:Src/stm32f0xx_hal_msp.c ****     PB8     ------> CAN_RX
 137:Src/stm32f0xx_hal_msp.c ****     PB9     ------> CAN_TX 
 138:Src/stm32f0xx_hal_msp.c ****     */
 139:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8|GPIO_PIN_9);
 140:Src/stm32f0xx_hal_msp.c **** 
 141:Src/stm32f0xx_hal_msp.c ****     /* CAN interrupt DeInit */
 142:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(CEC_CAN_IRQn);
 143:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN CAN_MspDeInit 1 */
 144:Src/stm32f0xx_hal_msp.c **** 
 145:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END CAN_MspDeInit 1 */
 146:Src/stm32f0xx_hal_msp.c ****   }
 147:Src/stm32f0xx_hal_msp.c **** 
 148:Src/stm32f0xx_hal_msp.c **** }
 216              		.loc 1 148 0
 217              		@ sp needed
 218 000a 10BD     		pop	{r4, pc}
 219              	.LVL10:
 220              	.L12:
 133:Src/stm32f0xx_hal_msp.c ****   
 221              		.loc 1 133 0
 222 000c 074A     		ldr	r2, .L13+4
 223 000e 084B     		ldr	r3, .L13+8
 224 0010 D169     		ldr	r1, [r2, #28]
 139:Src/stm32f0xx_hal_msp.c **** 
 225              		.loc 1 139 0
 226 0012 0848     		ldr	r0, .L13+12
 227              	.LVL11:
 133:Src/stm32f0xx_hal_msp.c ****   
 228              		.loc 1 133 0
 229 0014 0B40     		ands	r3, r1
 139:Src/stm32f0xx_hal_msp.c **** 
 230              		.loc 1 139 0
 231 0016 C021     		movs	r1, #192
 133:Src/stm32f0xx_hal_msp.c ****   
 232              		.loc 1 133 0
 233 0018 D361     		str	r3, [r2, #28]
 139:Src/stm32f0xx_hal_msp.c **** 
 234              		.loc 1 139 0
 235 001a 8900     		lsls	r1, r1, #2
ARM GAS  /tmp/ccVRKhKL.s 			page 8


 236 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 237              	.LVL12:
 142:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN CAN_MspDeInit 1 */
 238              		.loc 1 142 0
 239 0020 1E20     		movs	r0, #30
 240 0022 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 241              	.LVL13:
 242              		.loc 1 148 0
 243 0026 F0E7     		b	.L10
 244              	.L14:
 245              		.align	2
 246              	.L13:
 247 0028 00640040 		.word	1073767424
 248 002c 00100240 		.word	1073876992
 249 0030 FFFFFFFD 		.word	-33554433
 250 0034 00040048 		.word	1207960576
 251              		.cfi_endproc
 252              	.LFE42:
 254              		.text
 255              	.Letext0:
 256              		.file 2 "/opt/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 257              		.file 3 "/opt/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 258              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 259              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 260              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 261              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_can.h"
 262              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /tmp/ccVRKhKL.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_msp.c
     /tmp/ccVRKhKL.s:20     .text.HAL_MspInit:00000000 $t
     /tmp/ccVRKhKL.s:25     .text.HAL_MspInit:00000000 HAL_MspInit
     /tmp/ccVRKhKL.s:71     .text.HAL_MspInit:0000002c $d
     /tmp/ccVRKhKL.s:76     .text.HAL_CAN_MspInit:00000000 $t
     /tmp/ccVRKhKL.s:81     .text.HAL_CAN_MspInit:00000000 HAL_CAN_MspInit
     /tmp/ccVRKhKL.s:183    .text.HAL_CAN_MspInit:00000070 $d
     /tmp/ccVRKhKL.s:190    .text.HAL_CAN_MspDeInit:00000000 $t
     /tmp/ccVRKhKL.s:195    .text.HAL_CAN_MspDeInit:00000000 HAL_CAN_MspDeInit
     /tmp/ccVRKhKL.s:247    .text.HAL_CAN_MspDeInit:00000028 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
